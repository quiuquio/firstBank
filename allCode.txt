/*****relevant javascript files*******/
function FCClientJS(apiKey, apiSecret)
{
    var _server = "https://api.skybiometry.com/fc/";
    var _format = "json";

    var _apiKey = null;
    var _apiSecret = null;

    if (isDefined(apiKey))
        _apiKey = apiKey;
    if (isDefined(apiSecret))
        _apiSecret = apiSecret;

    // Public methods

    this.facesDetect = function (urls, files, options, callback) {
        var method = "faces/detect";
        var params = {};

        if (isDefined(urls)) {
            params.urls = urls;
        }

        if (isDefined(options)) {
            if (isDefined(options.detector) && !isEmpty(options.detector)) params.detector = options.detector;
            if (isDefined(options.attributes) && !isEmpty(options.attributes)) params.attributes = options.attributes;
            if (isDefined(options.detect_all_feature_points) && !isEmpty(options.detect_all_feature_points)) params.detect_all_feature_points = options.detect_all_feature_points;
        }

        CallMethod(method, files, params, callback);
        return true;
    };

    this.facesGroup = function (userIds, urls, files, options, callback) {
        var method = "faces/group";
        var params = { uids: userIds };

        if (isDefined(urls)) {
            params.urls = urls;
        }

        if (isDefined(options)) {
            if (isDefined(options.namespace) && !isEmpty(options.namespace)) params.namespace = options.namespace;
            if (isDefined(options.detector) && !isEmpty(options.detector)) params.detector = options.detector;
            if (isDefined(options.attributes) && !isEmpty(options.attributes)) params.attributes = options.attributes;
            if (isDefined(options.threshold) && !isEmpty(options.threshold)) params.threshold = options.threshold;
            if (isDefined(options.limit) && !isEmpty(options.limit)) params.limit = options.limit;
            if (isDefined(options.returnSimilarities) && !isEmpty(options.returnSimilarities)) params.returnSimilarities = options.returnSimilarities;
            if (isDefined(options.detect_all_feature_points) && !isEmpty(options.detect_all_feature_points)) params.detect_all_feature_points = options.detect_all_feature_points;
        }

        CallMethod(method, files, params, callback);
        return true;
    };

    this.facesRecognize = function (userIds, urls, files, options, callback) {
        var method = "faces/recognize";
        var params = { uids: userIds };

        if (isDefined(urls))
            params.urls = urls;

        if (isDefined(options)) {
            if (isDefined(options.namespace) && !isEmpty(options.namespace)) params.namespace = options.namespace;
            if (isDefined(options.detector) && !isEmpty(options.detector)) params.detector = options.detector;
            if (isDefined(options.attributes) && !isEmpty(options.attributes)) params.attributes = options.attributes;
            if (isDefined(options.limit) && !isEmpty(options.limit)) params.limit = options.limit;
            if (isDefined(options.detect_all_feature_points) && !isEmpty(options.detect_all_feature_points)) params.detect_all_feature_points = options.detect_all_feature_points;
        }

        CallMethod(method, files, params, callback);
        return true;
    };

    this.facesTrain = function (userIds, options, callback) {
        var method = "faces/train";
        var params = { uids: userIds };

        if (isDefined(options)) {
            if (isDefined(options.namespace) && !isEmpty(options.namespace)) params.namespace = options.namespace;
        }

        CallMethod(method, null, params, callback);
        return true;
    };

    this.facesStatus = function (userIds, options, callback) {
        var method = "faces/status";
        var params = { uids: userIds };

        if (isDefined(options)) {
            if (isDefined(options.namespace) && !isEmpty(options.namespace)) params.namespace = options.namespace;
        }

        CallMethod(method, null, params, callback);
        return true;
    };

    this.tagsAdd = function (userId, url, x, y, width, height, options, callback) {
        var method = "tags/add";
        
        var params = {
            url: url,
            uid: userId,
            x: x,
            y: y,
            width: width,
            height:height
        };

        if (isDefined(options)) {
            if (isDefined(options.label) && !isEmpty(options.label)) params.label = options.label;
            if (isDefined(options.password) && !isEmpty(options.password)) params.password = options.password;
        }

        CallMethod(method, null, params, callback);
        return true;
    };


    this.tagsSave = function (tagIds, userId, options, callback) {
        var method = "tags/save";
        var params = { tids: tagIds, uid: userId };

        if (isDefined(options)) {
            if (isDefined(options.namespace) && !isEmpty(options.namespace)) params.namespace = options.namespace;
            if (isDefined(options.label) && !isEmpty(options.label)) params.label = options.label;
            if (isDefined(options.password) && !isEmpty(options.password)) params.password = options.password;
        }

        CallMethod(method, null, params, callback);
        return true;
    };

    this.tagsRemove = function (tagIds, options, callback) {
        var method = "tags/remove";
        var params = { tids: tagIds };

        if (isDefined(options)) {
            if (isDefined(options.password) && !isEmpty(options.password)) params.password = options.password;
        }

        CallMethod(method, null, params, callback);
        return true;
    };

    this.tagsGet = function (userIds, urls, photoIds, options, callback) {
        var method = "tags/get";
        var params = { uids: userIds, urls: urls, pids: photoIds };

        if (isDefined(options)) {
            if (isDefined(options.order) && !isEmpty(options.order)) params.order = options.order;
            if (isDefined(options.limit) && !isEmpty(options.limit)) params.limit = options.limit;
            if (isDefined(options.together) && !isEmpty(options.together)) params.together = options.together;
            if (isDefined(options.filter) && !isEmpty(options.filter)) params.filter = options.filter;
            if (isDefined(options.namespace) && !isEmpty(options.namespace)) params.namespace = options.namespace;
        }

        CallMethod(method, null, params, callback);
        return true;
    };

    this.accountAuthenticate = function (options, callback) {
        var method = "account/authenticate";
        var params = {};

        CallMethod(method, null, params, callback);
        return true;
    };

    this.accountUsers = function (namespaces, options, callback) {
        var method = "account/users";
        var params = {namespaces: namespaces};

        CallMethod(method, null, params, callback);
        return true;
    };

    this.accountNamespaces = function (options, callback) {
        var method = "account/namespaces";
        var params = {};

        CallMethod(method, null, params, callback);
        return true;
    };

    this.accountLimits = function (options, callback) {
        var method = "account/limits";
        var params = { };

        CallMethod(method, null, params, callback);
        return true;
    };

    this.getServer = function () {
        return _server;
    }

    this.setServer = function (server) {
        _server = server;
    }
    
    // Private methods

    function isDefined(s) { return (typeof s != "undefined" && s != undefined); }
    function isEmpty(s) { return (!isDefined(s) || s == null || s == ''); }

    function GetXmlHttpRequest()
    {
        var xmlhttp=false;
        /*@cc_on @*/
        /*@if (@_jscript_version >= 5)
        // JScript gives us Conditional compilation, we can cope with old IE versions.
        // and security blocked creation of the objects.
         try {
          xmlhttp = new ActiveXObject("Msxml2.XMLHTTP");
         } catch (e) {
          try {
           xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
          } catch (E) {
           xmlhttp = false;
          }
         }
        @end @*/
        if (!xmlhttp && typeof XMLHttpRequest!='undefined') {
            try {
                xmlhttp = new XMLHttpRequest();
            } catch (e) {
                xmlhttp=false;
            }
        }
        if (!xmlhttp && window.createRequest) {
            xmlhttp = window.createRequest();
        }
        return xmlhttp;
    }

    function CallMethod(method, files, params, callback)
    {
        var url = _server + method + "." + _format;

        if (!isDefined(files)) {
            url += "?api_key=" + encodeURIComponent(_apiKey);
            if (isDefined(_apiSecret) && !isEmpty(_apiSecret)) {
                url += "&api_secret=" + encodeURIComponent(_apiSecret);
            }

            if (params != null) {
                for (param in params)
                    url += "&" + param + "=" + encodeURIComponent(params[param]);
            }

            var request = Math.round(Math.random() * 10000000);
            var callbackName = "jsonp" + request;
            var responceId = "fcClientJsResponse" + request;
            window[callbackName] = function (data) {
                document.getElementById(responceId).parentNode.removeChild(document.getElementById(responceId));
                if (typeof callback == "function") {
                    callback(data);
                }
            };
            url += "&callback=" + callbackName + "&" + request;

            var script = document.createElement("script");
            script.setAttribute("src", url);
            script.setAttribute("type", "text/javascript");
            script.setAttribute("id", responceId);
            document.body.appendChild(script);
        } else {
            var xhr = GetXmlHttpRequest();
            xhr.open("POST", url, true);
 
            if (params == null) params = { };
            params.api_key = _apiKey;
            if (isDefined(_apiSecret)) params.api_secret = _apiSecret;
            
            if (typeof FormData == 'undefined')
                throw "Only FormData is supported";
                
            var body = new FormData();
            for (param in params) {
                body.append(param, params[param]);
            }

            for (file in files) {
                body.append(file, files[file]);
            }

            xhr.onreadystatechange = function () {
                if (xhr.readyState == 4) {
                    if (xhr.status == 200 || xhr.status == 400) {
                        if (typeof callback == "function") {
                            callback(xhr.responseText);
                        }
                    }
                    else throw "Invalid status returned from API server";
                }
            }

            xhr.send(body);
        }
    }
}

// Copyright (c) 2005  Tom Wu
// All Rights Reserved.
// See "LICENSE" for details.

// Basic JavaScript BN library - subset useful for RSA encryption.

// Bits per digit
var dbits;

// JavaScript engine analysis
var canary = 0xdeadbeefcafe;
var j_lm = ((canary&0xffffff)==0xefcafe);

// (public) Constructor
function BigInteger(a,b,c) {
  if(a != null)
    if("number" == typeof a) this.fromNumber(a,b,c);
    else if(b == null && "string" != typeof a) this.fromString(a,256);
    else this.fromString(a,b);
}

// return new, unset BigInteger
function nbi() { return new BigInteger(null); }

// am: Compute w_j += (x*this_i), propagate carries,
// c is initial carry, returns final carry.
// c < 3*dvalue, x < 2*dvalue, this_i < dvalue
// We need to select the fastest one that works in this environment.

// am1: use a single mult and divide to get the high bits,
// max digit bits should be 26 because
// max internal value = 2*dvalue^2-2*dvalue (< 2^53)
function am1(i,x,w,j,c,n) {
  while(--n >= 0) {
    var v = x*this[i++]+w[j]+c;
    c = Math.floor(v/0x4000000);
    w[j++] = v&0x3ffffff;
  }
  return c;
}
// am2 avoids a big mult-and-extract completely.
// Max digit bits should be <= 30 because we do bitwise ops
// on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)
function am2(i,x,w,j,c,n) {
  var xl = x&0x7fff, xh = x>>15;
  while(--n >= 0) {
    var l = this[i]&0x7fff;
    var h = this[i++]>>15;
    var m = xh*l+h*xl;
    l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);
    c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);
    w[j++] = l&0x3fffffff;
  }
  return c;
}
// Alternately, set max digit bits to 28 since some
// browsers slow down when dealing with 32-bit numbers.
function am3(i,x,w,j,c,n) {
  var xl = x&0x3fff, xh = x>>14;
  while(--n >= 0) {
    var l = this[i]&0x3fff;
    var h = this[i++]>>14;
    var m = xh*l+h*xl;
    l = xl*l+((m&0x3fff)<<14)+w[j]+c;
    c = (l>>28)+(m>>14)+xh*h;
    w[j++] = l&0xfffffff;
  }
  return c;
}
if(j_lm && (navigator.appName == "Microsoft Internet Explorer")) {
  BigInteger.prototype.am = am2;
  dbits = 30;
}
else if(j_lm && (navigator.appName != "Netscape")) {
  BigInteger.prototype.am = am1;
  dbits = 26;
}
else { // Mozilla/Netscape seems to prefer am3
  BigInteger.prototype.am = am3;
  dbits = 28;
}

BigInteger.prototype.DB = dbits;
BigInteger.prototype.DM = ((1<<dbits)-1);
BigInteger.prototype.DV = (1<<dbits);

var BI_FP = 52;
BigInteger.prototype.FV = Math.pow(2,BI_FP);
BigInteger.prototype.F1 = BI_FP-dbits;
BigInteger.prototype.F2 = 2*dbits-BI_FP;

// Digit conversions
var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";
var BI_RC = new Array();
var rr,vv;
rr = "0".charCodeAt(0);
for(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;
rr = "a".charCodeAt(0);
for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
rr = "A".charCodeAt(0);
for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;

function int2char(n) { return BI_RM.charAt(n); }
function intAt(s,i) {
  var c = BI_RC[s.charCodeAt(i)];
  return (c==null)?-1:c;
}

// (protected) copy this to r
function bnpCopyTo(r) {
  for(var i = this.t-1; i >= 0; --i) r[i] = this[i];
  r.t = this.t;
  r.s = this.s;
}

// (protected) set from integer value x, -DV <= x < DV
function bnpFromInt(x) {
  this.t = 1;
  this.s = (x<0)?-1:0;
  if(x > 0) this[0] = x;
  else if(x < -1) this[0] = x+this.DV;
  else this.t = 0;
}

// return bigint initialized to value
function nbv(i) { var r = nbi(); r.fromInt(i); return r; }

// (protected) set from string and radix
function bnpFromString(s,b) {
  var k;
  if(b == 16) k = 4;
  else if(b == 8) k = 3;
  else if(b == 256) k = 8; // byte array
  else if(b == 2) k = 1;
  else if(b == 32) k = 5;
  else if(b == 4) k = 2;
  else { this.fromRadix(s,b); return; }
  this.t = 0;
  this.s = 0;
  var i = s.length, mi = false, sh = 0;
  while(--i >= 0) {
    var x = (k==8)?s[i]&0xff:intAt(s,i);
    if(x < 0) {
      if(s.charAt(i) == "-") mi = true;
      continue;
    }
    mi = false;
    if(sh == 0)
      this[this.t++] = x;
    else if(sh+k > this.DB) {
      this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;
      this[this.t++] = (x>>(this.DB-sh));
    }
    else
      this[this.t-1] |= x<<sh;
    sh += k;
    if(sh >= this.DB) sh -= this.DB;
  }
  if(k == 8 && (s[0]&0x80) != 0) {
    this.s = -1;
    if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;
  }
  this.clamp();
  if(mi) BigInteger.ZERO.subTo(this,this);
}

// (protected) clamp off excess high words
function bnpClamp() {
  var c = this.s&this.DM;
  while(this.t > 0 && this[this.t-1] == c) --this.t;
}

// (public) return string representation in given radix
function bnToString(b) {
  if(this.s < 0) return "-"+this.negate().toString(b);
  var k;
  if(b == 16) k = 4;
  else if(b == 8) k = 3;
  else if(b == 2) k = 1;
  else if(b == 32) k = 5;
  else if(b == 4) k = 2;
  else return this.toRadix(b);
  var km = (1<<k)-1, d, m = false, r = "", i = this.t;
  var p = this.DB-(i*this.DB)%k;
  if(i-- > 0) {
    if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r = int2char(d); }
    while(i >= 0) {
      if(p < k) {
        d = (this[i]&((1<<p)-1))<<(k-p);
        d |= this[--i]>>(p+=this.DB-k);
      }
      else {
        d = (this[i]>>(p-=k))&km;
        if(p <= 0) { p += this.DB; --i; }
      }
      if(d > 0) m = true;
      if(m) r += int2char(d);
    }
  }
  return m?r:"0";
}

// (public) -this
function bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }

// (public) |this|
function bnAbs() { return (this.s<0)?this.negate():this; }

// (public) return + if this > a, - if this < a, 0 if equal
function bnCompareTo(a) {
  var r = this.s-a.s;
  if(r != 0) return r;
  var i = this.t;
  r = i-a.t;
  if(r != 0) return (this.s<0)?-r:r;
  while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;
  return 0;
}

// returns bit length of the integer x
function nbits(x) {
  var r = 1, t;
  if((t=x>>>16) != 0) { x = t; r += 16; }
  if((t=x>>8) != 0) { x = t; r += 8; }
  if((t=x>>4) != 0) { x = t; r += 4; }
  if((t=x>>2) != 0) { x = t; r += 2; }
  if((t=x>>1) != 0) { x = t; r += 1; }
  return r;
}

// (public) return the number of bits in "this"
function bnBitLength() {
  if(this.t <= 0) return 0;
  return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));
}

// (protected) r = this << n*DB
function bnpDLShiftTo(n,r) {
  var i;
  for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];
  for(i = n-1; i >= 0; --i) r[i] = 0;
  r.t = this.t+n;
  r.s = this.s;
}

// (protected) r = this >> n*DB
function bnpDRShiftTo(n,r) {
  for(var i = n; i < this.t; ++i) r[i-n] = this[i];
  r.t = Math.max(this.t-n,0);
  r.s = this.s;
}

// (protected) r = this << n
function bnpLShiftTo(n,r) {
  var bs = n%this.DB;
  var cbs = this.DB-bs;
  var bm = (1<<cbs)-1;
  var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;
  for(i = this.t-1; i >= 0; --i) {
    r[i+ds+1] = (this[i]>>cbs)|c;
    c = (this[i]&bm)<<bs;
  }
  for(i = ds-1; i >= 0; --i) r[i] = 0;
  r[ds] = c;
  r.t = this.t+ds+1;
  r.s = this.s;
  r.clamp();
}

// (protected) r = this >> n
function bnpRShiftTo(n,r) {
  r.s = this.s;
  var ds = Math.floor(n/this.DB);
  if(ds >= this.t) { r.t = 0; return; }
  var bs = n%this.DB;
  var cbs = this.DB-bs;
  var bm = (1<<bs)-1;
  r[0] = this[ds]>>bs;
  for(var i = ds+1; i < this.t; ++i) {
    r[i-ds-1] |= (this[i]&bm)<<cbs;
    r[i-ds] = this[i]>>bs;
  }
  if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;
  r.t = this.t-ds;
  r.clamp();
}

// (protected) r = this - a
function bnpSubTo(a,r) {
  var i = 0, c = 0, m = Math.min(a.t,this.t);
  while(i < m) {
    c += this[i]-a[i];
    r[i++] = c&this.DM;
    c >>= this.DB;
  }
  if(a.t < this.t) {
    c -= a.s;
    while(i < this.t) {
      c += this[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    c += this.s;
  }
  else {
    c += this.s;
    while(i < a.t) {
      c -= a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    c -= a.s;
  }
  r.s = (c<0)?-1:0;
  if(c < -1) r[i++] = this.DV+c;
  else if(c > 0) r[i++] = c;
  r.t = i;
  r.clamp();
}

// (protected) r = this * a, r != this,a (HAC 14.12)
// "this" should be the larger one if appropriate.
function bnpMultiplyTo(a,r) {
  var x = this.abs(), y = a.abs();
  var i = x.t;
  r.t = i+y.t;
  while(--i >= 0) r[i] = 0;
  for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);
  r.s = 0;
  r.clamp();
  if(this.s != a.s) BigInteger.ZERO.subTo(r,r);
}

// (protected) r = this^2, r != this (HAC 14.16)
function bnpSquareTo(r) {
  var x = this.abs();
  var i = r.t = 2*x.t;
  while(--i >= 0) r[i] = 0;
  for(i = 0; i < x.t-1; ++i) {
    var c = x.am(i,x[i],r,2*i,0,1);
    if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {
      r[i+x.t] -= x.DV;
      r[i+x.t+1] = 1;
    }
  }
  if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);
  r.s = 0;
  r.clamp();
}

// (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)
// r != q, this != m.  q or r may be null.
function bnpDivRemTo(m,q,r) {
  var pm = m.abs();
  if(pm.t <= 0) return;
  var pt = this.abs();
  if(pt.t < pm.t) {
    if(q != null) q.fromInt(0);
    if(r != null) this.copyTo(r);
    return;
  }
  if(r == null) r = nbi();
  var y = nbi(), ts = this.s, ms = m.s;
  var nsh = this.DB-nbits(pm[pm.t-1]);  // normalize modulus
  if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }
  else { pm.copyTo(y); pt.copyTo(r); }
  var ys = y.t;
  var y0 = y[ys-1];
  if(y0 == 0) return;
  var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);
  var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;
  var i = r.t, j = i-ys, t = (q==null)?nbi():q;
  y.dlShiftTo(j,t);
  if(r.compareTo(t) >= 0) {
    r[r.t++] = 1;
    r.subTo(t,r);
  }
  BigInteger.ONE.dlShiftTo(ys,t);
  t.subTo(y,y); // "negative" y so we can replace sub with am later
  while(y.t < ys) y[y.t++] = 0;
  while(--j >= 0) {
    // Estimate quotient digit
    var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);
    if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {  // Try it out
      y.dlShiftTo(j,t);
      r.subTo(t,r);
      while(r[i] < --qd) r.subTo(t,r);
    }
  }
  if(q != null) {
    r.drShiftTo(ys,q);
    if(ts != ms) BigInteger.ZERO.subTo(q,q);
  }
  r.t = ys;
  r.clamp();
  if(nsh > 0) r.rShiftTo(nsh,r);    // Denormalize remainder
  if(ts < 0) BigInteger.ZERO.subTo(r,r);
}

// (public) this mod a
function bnMod(a) {
  var r = nbi();
  this.abs().divRemTo(a,null,r);
  if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);
  return r;
}

// Modular reduction using "classic" algorithm
function Classic(m) { this.m = m; }
function cConvert(x) {
  if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);
  else return x;
}
function cRevert(x) { return x; }
function cReduce(x) { x.divRemTo(this.m,null,x); }
function cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
function cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

Classic.prototype.convert = cConvert;
Classic.prototype.revert = cRevert;
Classic.prototype.reduce = cReduce;
Classic.prototype.mulTo = cMulTo;
Classic.prototype.sqrTo = cSqrTo;

// (protected) return "-1/this % 2^DB"; useful for Mont. reduction
// justification:
//         xy == 1 (mod m)
//         xy =  1+km
//   xy(2-xy) = (1+km)(1-km)
// x[y(2-xy)] = 1-k^2m^2
// x[y(2-xy)] == 1 (mod m^2)
// if y is 1/x mod m, then y(2-xy) is 1/x mod m^2
// should reduce x and y(2-xy) by m^2 at each step to keep size bounded.
// JS multiply "overflows" differently from C/C++, so care is needed here.
function bnpInvDigit() {
  if(this.t < 1) return 0;
  var x = this[0];
  if((x&1) == 0) return 0;
  var y = x&3;      // y == 1/x mod 2^2
  y = (y*(2-(x&0xf)*y))&0xf;    // y == 1/x mod 2^4
  y = (y*(2-(x&0xff)*y))&0xff;  // y == 1/x mod 2^8
  y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;   // y == 1/x mod 2^16
  // last step - calculate inverse mod DV directly;
  // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints
  y = (y*(2-x*y%this.DV))%this.DV;      // y == 1/x mod 2^dbits
  // we really want the negative inverse, and -DV < y < DV
  return (y>0)?this.DV-y:-y;
}

// Montgomery reduction
function Montgomery(m) {
  this.m = m;
  this.mp = m.invDigit();
  this.mpl = this.mp&0x7fff;
  this.mph = this.mp>>15;
  this.um = (1<<(m.DB-15))-1;
  this.mt2 = 2*m.t;
}

// xR mod m
function montConvert(x) {
  var r = nbi();
  x.abs().dlShiftTo(this.m.t,r);
  r.divRemTo(this.m,null,r);
  if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);
  return r;
}

// x/R mod m
function montRevert(x) {
  var r = nbi();
  x.copyTo(r);
  this.reduce(r);
  return r;
}

// x = x/R mod m (HAC 14.32)
function montReduce(x) {
  while(x.t <= this.mt2)    // pad x so am has enough room later
    x[x.t++] = 0;
  for(var i = 0; i < this.m.t; ++i) {
    // faster way of calculating u0 = x[i]*mp mod DV
    var j = x[i]&0x7fff;
    var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;
    // use am to combine the multiply-shift-add into one call
    j = i+this.m.t;
    x[j] += this.m.am(0,u0,x,i,0,this.m.t);
    // propagate carry
    while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }
  }
  x.clamp();
  x.drShiftTo(this.m.t,x);
  if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);
}

// r = "x^2/R mod m"; x != r
function montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }

// r = "xy/R mod m"; x,y != r
function montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }

Montgomery.prototype.convert = montConvert;
Montgomery.prototype.revert = montRevert;
Montgomery.prototype.reduce = montReduce;
Montgomery.prototype.mulTo = montMulTo;
Montgomery.prototype.sqrTo = montSqrTo;

// (protected) true iff this is even
function bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }

// (protected) this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)
function bnpExp(e,z) {
  if(e > 0xffffffff || e < 1) return BigInteger.ONE;
  var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;
  g.copyTo(r);
  while(--i >= 0) {
    z.sqrTo(r,r2);
    if((e&(1<<i)) > 0) z.mulTo(r2,g,r);
    else { var t = r; r = r2; r2 = t; }
  }
  return z.revert(r);
}

// (public) this^e % m, 0 <= e < 2^32
function bnModPowInt(e,m) {
  var z;
  if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);
  return this.exp(e,z);
}

// protected
BigInteger.prototype.copyTo = bnpCopyTo;
BigInteger.prototype.fromInt = bnpFromInt;
BigInteger.prototype.fromString = bnpFromString;
BigInteger.prototype.clamp = bnpClamp;
BigInteger.prototype.dlShiftTo = bnpDLShiftTo;
BigInteger.prototype.drShiftTo = bnpDRShiftTo;
BigInteger.prototype.lShiftTo = bnpLShiftTo;
BigInteger.prototype.rShiftTo = bnpRShiftTo;
BigInteger.prototype.subTo = bnpSubTo;
BigInteger.prototype.multiplyTo = bnpMultiplyTo;
BigInteger.prototype.squareTo = bnpSquareTo;
BigInteger.prototype.divRemTo = bnpDivRemTo;
BigInteger.prototype.invDigit = bnpInvDigit;
BigInteger.prototype.isEven = bnpIsEven;
BigInteger.prototype.exp = bnpExp;

// public
BigInteger.prototype.toString = bnToString;
BigInteger.prototype.negate = bnNegate;
BigInteger.prototype.abs = bnAbs;
BigInteger.prototype.compareTo = bnCompareTo;
BigInteger.prototype.bitLength = bnBitLength;
BigInteger.prototype.mod = bnMod;
BigInteger.prototype.modPowInt = bnModPowInt;

// "constants"
BigInteger.ZERO = nbv(0);
BigInteger.ONE = nbv(1);

// prng4.js - uses Arcfour as a PRNG

function Arcfour() {
  this.i = 0;
  this.j = 0;
  this.S = new Array();
}

// Initialize arcfour context from key, an array of ints, each from [0..255]
function ARC4init(key) {
  var i, j, t;
  for(i = 0; i < 256; ++i)
    this.S[i] = i;
  j = 0;
  for(i = 0; i < 256; ++i) {
    j = (j + this.S[i] + key[i % key.length]) & 255;
    t = this.S[i];
    this.S[i] = this.S[j];
    this.S[j] = t;
  }
  this.i = 0;
  this.j = 0;
}

function ARC4next() {
  var t;
  this.i = (this.i + 1) & 255;
  this.j = (this.j + this.S[this.i]) & 255;
  t = this.S[this.i];
  this.S[this.i] = this.S[this.j];
  this.S[this.j] = t;
  return this.S[(t + this.S[this.i]) & 255];
}

Arcfour.prototype.init = ARC4init;
Arcfour.prototype.next = ARC4next;

// Plug in your RNG constructor here
function prng_newstate() {
  return new Arcfour();
}

// Pool size must be a multiple of 4 and greater than 32.
// An array of bytes the size of the pool will be passed to init()
var rng_psize = 256;

// Random number generator - requires a PRNG backend, e.g. prng4.js

// For best results, put code like
// <body onClick='rng_seed_time();' onKeyPress='rng_seed_time();'>
// in your main HTML document.

var rng_state;
var rng_pool;
var rng_pptr;

// Mix in a 32-bit integer into the pool
function rng_seed_int(x) {
  rng_pool[rng_pptr++] ^= x & 255;
  rng_pool[rng_pptr++] ^= (x >> 8) & 255;
  rng_pool[rng_pptr++] ^= (x >> 16) & 255;
  rng_pool[rng_pptr++] ^= (x >> 24) & 255;
  if(rng_pptr >= rng_psize) rng_pptr -= rng_psize;
}

// Mix in the current time (w/milliseconds) into the pool
function rng_seed_time() {
  rng_seed_int(new Date().getTime());
}

// Initialize the pool with junk if needed.
if(rng_pool == null) {
  rng_pool = new Array();
  rng_pptr = 0;
  var t;
  if(window.crypto && window.crypto.getRandomValues) {
    // Use webcrypto if available
    var ua = new Uint8Array(32);
    window.crypto.getRandomValues(ua);
    for(t = 0; t < 32; ++t)
      rng_pool[rng_pptr++] = ua[t];
  }
  if(navigator.appName == "Netscape" && navigator.appVersion < "5" && window.crypto) {
    // Extract entropy (256 bits) from NS4 RNG if available
    var z = window.crypto.random(32);
    for(t = 0; t < z.length; ++t)
      rng_pool[rng_pptr++] = z.charCodeAt(t) & 255;
  }  
  while(rng_pptr < rng_psize) {  // extract some randomness from Math.random()
    t = Math.floor(65536 * Math.random());
    rng_pool[rng_pptr++] = t >>> 8;
    rng_pool[rng_pptr++] = t & 255;
  }
  rng_pptr = 0;
  rng_seed_time();
  //rng_seed_int(window.screenX);
  //rng_seed_int(window.screenY);
}

function rng_get_byte() {
  if(rng_state == null) {
    rng_seed_time();
    rng_state = prng_newstate();
    rng_state.init(rng_pool);
    for(rng_pptr = 0; rng_pptr < rng_pool.length; ++rng_pptr)
      rng_pool[rng_pptr] = 0;
    rng_pptr = 0;
    //rng_pool = null;
  }
  // TODO: allow reseeding after first request
  return rng_state.next();
}

// some how it doesn't work
//function rng_get_bytes(ba) {
//  var i;
//  for(i = 0; i < ba.length; ++i) ba[i] = rng_get_byte();
//}

function SecureRandom() {
  this.nextBytes = function(ba) {
    var i;
    for(i = 0; i < ba.length; ++i) ba[i] = rng_get_byte();
  };
}

//SecureRandom.prototype.nextBytes = rng_get_bytes;

// Depends on jsbn.js and rng.js

// Version 1.1: support utf-8 encoding in pkcs1pad2

// convert a (hex) string to a bignum object
function parseBigInt(str,r) {
  return new BigInteger(str,r);
}

function linebrk(s,n) {
  var ret = "";
  var i = 0;
  while(i + n < s.length) {
    ret += s.substring(i,i+n) + "\n";
    i += n;
  }
  return ret + s.substring(i,s.length);
}

function byte2Hex(b) {
  if(b < 0x10)
    return "0" + b.toString(16);
  else
    return b.toString(16);
}

// PKCS#1 (type 2, random) pad input string s to n bytes, and return a bigint
function pkcs1pad2(s,n) {
  if(n < s.length + 11) { // TODO: fix for utf-8
    alert("Message too long for RSA");
    return null;
  }  

  var ba = new Array();
  var i = s.length - 1;

  while(i >= 0 && n > 0) {
    var c = s.charCodeAt(i--);
    if(c < 128) { // encode using utf-8
      ba[--n] = c;
    }
    else if((c > 127) && (c < 2048)) {
      ba[--n] = (c & 63) | 128;
      ba[--n] = (c >> 6) | 192;
    }
    else {
      ba[--n] = (c & 63) | 128;
      ba[--n] = ((c >> 6) & 63) | 128;
      ba[--n] = (c >> 12) | 224;
    }
  }

  ba[--n] = 0;
  var rng = new SecureRandom();
  var x = new Array();

  while(n > 2) { // random non-zero pad
    x[0] = 0;
    while(x[0] == 0) {
      
      rng.nextBytes(x);
    }
    ba[--n] = x[0];
  }
  ba[--n] = 2;
  ba[--n] = 0;

  return new BigInteger(ba);
}

// "empty" RSA key constructor
function RSAKey() {
  this.n = null;
  this.e = 0;
  this.d = null;
  this.p = null;
  this.q = null;
  this.dmp1 = null;
  this.dmq1 = null;
  this.coeff = null;
}

// Set the public key fields N and e from hex strings
function RSASetPublic(N,E) {
  if(N != null && E != null && N.length > 0 && E.length > 0) {
    this.n = parseBigInt(N,16);
    this.e = parseInt(E,16);
  }
  else
    alert("Invalid RSA public key");
}

// Perform raw public operation on "x": return x^e (mod n)
function RSADoPublic(x) {
  return x.modPowInt(this.e, this.n);
}

// Return the PKCS#1 RSA encryption of "text" as an even-length hex string
function RSAEncrypt(text) { 
  var m = pkcs1pad2(text,(this.n.bitLength()+7)>>3);
  if(m == null) return null;
  var c = this.doPublic(m);
  if(c == null) return null;
  var h = c.toString(16);
  if((h.length & 1) == 0) return h; else return "0" + h;
}

// Return the PKCS#1 RSA encryption of "text" as a Base64-encoded string
//function RSAEncryptB64(text) {
//  var h = this.encrypt(text);
//  if(h) return hex2b64(h); else return null;
//}

// protected
RSAKey.prototype.doPublic = RSADoPublic;

// public
RSAKey.prototype.setPublic = RSASetPublic;
RSAKey.prototype.encrypt = RSAEncrypt;
//RSAKey.prototype.encrypt_b64 = RSAEncryptB64;




/*****end of relevant javascript files*******/

/*****relevant css files*******/
/*    Generated by http://www.cssportal.com    */

/*Basic reset*/
* {margin: 0; padding: 0;}

body {
    font-family: Verdana, Arial, Helvetica, sans-serif;
    font-size: 13px;
    color:#333
}

p {
    padding: 10px;
}

#wrapper {
    width: 100%;
    min-width: 800px;
    max-width: 2000px;
    margin: 0 auto;
}

header {
    float: left;
    height: 15%;
    width: 100%;
    /*background: #FF6633;*/
    background: rgb(99,147,193); /* Old browsers */
    background: -moz-linear-gradient(top,  rgba(99,147,193,1) 0%, rgba(207,231,250,1) 100%); /* FF3.6+ */
    background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(99,147,193,1)), color-stop(100%,rgba(207,231,250,1))); /* Chrome,Safari4+ */
    background: -webkit-linear-gradient(top,  rgba(99,147,193,1) 0%,rgba(207,231,250,1) 100%); /* Chrome10+,Safari5.1+ */
    background: -o-linear-gradient(top,  rgba(99,147,193,1) 0%,rgba(207,231,250,1) 100%); /* Opera 11.10+ */
    background: -ms-linear-gradient(top,  rgba(99,147,193,1) 0%,rgba(207,231,250,1) 100%); /* IE10+ */
    background: linear-gradient(to bottom,  rgba(99,147,193,1) 0%,rgba(207,231,250,1) 100%); /* W3C */
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#6393c1', endColorstr='#cfe7fa',GradientType=0 ); /* IE6-9 */

}

#content, main {
    float: left;
    width: 65%;
    height: 71%;
    margin: 1%;
    overflow: auto;
}

#content {
    background: #FFFFFF;
    margin-left: 150px;
    margin-right: 150px;
}

#leftcolumn {
    background: white;
    width: 15%;
    height: 75%;
    float: left;
}

#rightcolumn {
    background: white;
    width: 18%;
    height: 75%;
    float: left;
}

footer {
    height: 10%;
    width: 100%;
    background: #33FF66;
    clear: both;
    background: rgb(207,231,250); /* Old browsers */
    background: -moz-linear-gradient(top,  rgba(207,231,250,1) 0%, rgba(99,147,193,1) 100%); /* FF3.6+ */
    background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,rgba(207,231,250,1)), color-stop(100%,rgba(99,147,193,1))); /* Chrome,Safari4+ */
    background: -webkit-linear-gradient(top,  rgba(207,231,250,1) 0%,rgba(99,147,193,1) 100%); /* Chrome10+,Safari5.1+ */
    background: -o-linear-gradient(top,  rgba(207,231,250,1) 0%,rgba(99,147,193,1) 100%); /* Opera 11.10+ */
    background: -ms-linear-gradient(top,  rgba(207,231,250,1) 0%,rgba(99,147,193,1) 100%); /* IE10+ */
    background: linear-gradient(to bottom,  rgba(207,231,250,1) 0%,rgba(99,147,193,1) 100%); /* W3C */
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#cfe7fa', endColorstr='#6393c1',GradientType=0 ); /* IE6-9 */

}


#accordian {
    background: #004050;
    width: 100%;
    margin: 0 auto 0 auto;
    color: white;
    /*Some cool shadow and glow effect*/
    box-shadow: 
        0 5px 15px 1px rgba(0, 0, 0, 0.6), 
        0 0 200px 1px rgba(255, 255, 255, 0.5);
}
/*heading styles*/
#accordian h3 {
    font-size: 12px;
    line-height: 34px;
    padding: 0 10px;
    cursor: pointer;
    /*fallback for browsers not supporting gradients*/
    background: #003040; 
    background: linear-gradient(#003040, #002535);
}
/*heading hover effect*/
#accordian h3:hover {
    text-shadow: 0 0 1px rgba(255, 255, 255, 0.7);
}
/*iconfont styles*/
#accordian h3 span {
    font-size: 16px;
    margin-right: 10px;
}
/*list items*/
#accordian li {
    list-style-type: none;
}
/*links*/
#accordian ul ul li a {
    color: white;
    text-decoration: none;
    font-size: 11px;
    line-height: 27px;
    display: block;
    padding: 0 15px;
    /*transition for smooth hover animation*/
    transition: all 0.15s;
}
/*hover effect on links*/
#accordian ul ul li a:hover {
    background: #003545;
    border-left: 5px solid lightgreen;
}
/*Lets hide the non active LIs by default*/
#accordian ul ul {
    display: none;
}
#accordian li.active ul {
    display: block;
}

#miniwidget > div.footer{
    display:none !important;
}
iframe {
    width: 90%;
    margin: 1%;
}

#transactionsList{
    border: solid thin black;
    border-collapse: collapse;
    text-align: center;
}
#transactionsList tr > td, th{
    border: solid thin black;  
}

#sessionInfo{
    float: right;
}

#welcomeMessage{
    float:left;
}

.stdBox{
    border: solid thin;
    padding: 4em;
    margin: 4em;
    border-radius: 1em;
    background-color: #D5F0D3;
}

.left{
    float: left;
}

.right{
    float: right;
}

#custServ{
    width: 30%;
    clear: both;
}

.logoContainer{
    height: 100%
}

.logoContainer img{
    height: 100%
}

.Title2{
    font-size: 3em;
    font-weight: bold;
}

.BlackTitle{
    font-weight: bold;   
}
.MiddleGrey{
    background-color: #85CF80;
}
.LightGrey{
    background-color: #D5F0D3;
}
.smallfont {  
    font-size: 8pt;
    color: #000000
}
#logoutForm{
    float:right;
    margin-right: 40%;
}

#pw2Block input{
    width:2em;
}

#page{}

.commonTable{
    width: 80%;
    margin-left: 9%;
    margin-right: 9%;
    text-align: center;
}

.alCenter{
    text-align: center;
}
.alRight{
    text-align: right;
}
#acnts{
    width: 50%;
}
.bigButton {
margin-left: 35%;
margin-right: 35%;
width: 10%;
height: 2em;
}

#bankCode{
    width: 4em;
}
#msg4R{
    width: 50%;
}

.ui-tooltip {
    opacity: 0.9;
  }

/*****end of relevant css files*******/



/*****relevant php/html files*******/
<div class="Title2"> Online Bill Payment </div>


<div id="contentBox">
<form method="POST" action="index.php">                            
    <table border="0" cellspacing="0" cellpadding="0" width="570" class="commonForm2">
            <tbody><tr class="LightGrey">
        <td class="label" width="30%">Payee:</td>
        <td>
             <select id="payeeList">
                <option value="">------------SELECT ACCOUNT NAME------------</option>
                <option value="ZURICHINSURANCE(HONGKONG)">ZURICH INSURANCE (HONG KONG)</option>
            </select>               
        </td>
        </tr>
        <tr class="LightGrey">
            <td class="label">Bill Account No.:</td>
            <td >
                <div style="width:50%">
                <input type="text" name="billAcc" id="bAccNum" size="26" maxlength="25" value="">
                </div>
            </td>
        </tr>

<tr class="LightGrey">
    <td class="label">Bill Type:</td>
    <td >
        <select>
            <option>01 HOSTING</option>
            <option>02 WEB DESIGN</option>
            <option>03 E-SHOP</option>
            <option>04 OTHERS</option>
        </select>
    </td>
</tr>

<tr class="LightGrey">
    <td class="label">Amount:</td>
    <td >
            HKD&nbsp;
            <input type="text" name="debitAmountInput" autocomplete="off" size="16" maxlength="16"  value="">
    </td>
</tr>
<tr class="LightGrey">
    <td class="label">Deduct From Account:</td>
    <td ><font class="SELECT"> 
        <select id="source" name="source">
                <option selected="selected">----------- Please select account -----------</option>
                <?php
                    foreach ($_SESSION['accts'] as $value) {
                        ?>
                        <option value=<?php echo "'{$value['acct_no']}'"?>><?php echo "{$value['acct_no']}"?></option>
                        <?php
                    }
               ?>
        </select>
        </font>
    </td>
</tr>
<tr class="LightGrey">
    <td >
    <input type="radio" name="WhenToPay" value="1" checked="checked">
    <font class="CONTENT">Transfer Now</font></td>
    <td ><font class="CONTENT">&nbsp;</font></td>
</tr>
<tr class="LightGrey">
    <td >
    <input type="radio" name="WhenToPay" value="0">
    <font class="CONTENT">Transfer Date</font></td>
    <td ><font class="SELECT"> 
    <select name="effDate" onfocus="">
        <option value="21-11-2014">21-11-2014</option>
        <option value="22-11-2014">22-11-2014</option>
        <option value="24-11-2014">24-11-2014</option>
        <option value="25-11-2014">25-11-2014</option>
        <option value="26-11-2014">26-11-2014</option>
        <option value="27-11-2014">27-11-2014</option>
        <option value="28-11-2014">28-11-2014</option>
        <option value="29-11-2014">29-11-2014</option>
        <option value="01-12-2014">01-12-2014</option>
        <option value="02-12-2014">02-12-2014</option>
        <option value="03-12-2014">03-12-2014</option>
        <option value="04-12-2014">04-12-2014</option>
        <option value="05-12-2014">05-12-2014</option>
        <option value="06-12-2014">06-12-2014</option>
        <option value="08-12-2014">08-12-2014</option>
        <option value="09-12-2014">09-12-2014</option>
        <option value="10-12-2014">10-12-2014</option>
        <option value="11-12-2014">11-12-2014</option>
        <option value="12-12-2014">12-12-2014</option>
        <option value="13-12-2014">13-12-2014</option>
        <option value="15-12-2014">15-12-2014</option>
        <option value="16-12-2014">16-12-2014</option>
        <option value="17-12-2014">17-12-2014</option>
        <option value="18-12-2014">18-12-2014</option>
        <option value="19-12-2014">19-12-2014</option>
        <option value="20-12-2014">20-12-2014</option>
        <option value="22-12-2014">22-12-2014</option>
        <option value="23-12-2014">23-12-2014</option>
        <option value="24-12-2014">24-12-2014</option>
        <option value="27-12-2014">27-12-2014</option>
        <option value="29-12-2014">29-12-2014</option>
        <option value="30-12-2014">30-12-2014</option>
        <option value="31-12-2014">31-12-2014</option>
    </select>
    </font></td>
</tr> 
</tbody>
</table>
<input type="text" id="#selectedPage" name="selectedPage" value="billPayment" hidden>
<input type="text" id="#confirmed" name="confirmed" value="yes" hidden>                
        <button id="button" class="bigButton" type="submit">Submit</button>
        <?php 
            if(isset($_POST['confirmed'])){
                if ($_POST['WhenToPay'] == 0 ){
                    echo $db->addTimedTransfer($_POST['source'], $_POST['billAcc'], "", $_POST['debitAmountInput'], $_POST['effDate'], "fixed", "", 1, 1) ? "Transaction scheduled." : "Transcation not scheduled.";                
                }else{
                    echo $db->mTransfer($_POST['source'], $_POST['billAcc'], $_POST['debitAmountInput'], "Bill Payment", TRUE) ? "Transaction successful." : "Transcation failed.";
                    //echo $db->mTransfer($_POST['source'], 123456789011, 123, "", TRUE) ? "Transaction successful." : "Transcation failed.";        
                }
            }else{
                echo "";
            }

        ?>

</form>
</div>
<!-- importantNotes -->
<div id="importantNotes" class="noMarginBottom">
    <h3>Note:</h3>
    <ol>    
        <li>Once an instant payment instruction is submitted, no amendment or cancellation is allowed, regardless of the instruction's processing status.</li>
        <li>To avoid any penalty fees  to be charged  by your merchant (if applicable) , you are suggested to pay the bill 1-2 working days before the due date that is shown on the e-bill.</li>
        <li>For online bill payment with credit card, the payment must be used to settle wholly or partially an underlying genuine debt due to the payee (the "Debt"). The Cardholder is required to provide evidence
        thereof if so requested by First Bank. First Bank reserves the right to decline generating Cash Dollars, or to cancel the Cash Dollars generated, for any payment which Hang Seng suspects not be used to settle
        the Debt. 
        </li>
    </ol>
</div> <!--/ importantNotes -->
        </div> <!--/ content middle -->
        <div id="contentBox-bottom"></div>
</div>

<script type="text/javascript">
    $("#payeeList").change(function(evt){ 
      $("#bAccNum")[0].setAttribute("value", Math.floor(Math.random() * 100000000000));
      console.log(evt);
    });
</script>

<?php
function confirmationPass(){
        $posString = gen2ndPwPos();
        $selectedIpunt = explode("-", $posString);
        $vals = [];
        $disables = [];
        for($i=0; $i<8; $i++){
            if(in_array($i, $selectedIpunt)){
                array_push($vals, "");
                array_push($disables, "");
            }
            else{
                array_push($vals, "value='.'");
                array_push($disables, "disabled='disabled'");
            }
        }
        echo    '
                <script type="text/javascript" src="js/jsbn.js"></script>
                <script type="text/javascript" src="js/prng4.js"></script>
                <script type="text/javascript" src="js/rng.js"></script>
                <script type="text/javascript" src="js/rsa.js"></script>
                ';
        echo '<h2>Input Password Number Two</h2>';
        //echo '<form method="POST" action="' . htmlspecialchars($_SERVER["PHP_SELF"]) . '" id="" name="loginform">';
        echo '<label for="pw2Block">Password</label> ';
        echo '<!--<input id="login_input_password" type="password" name="user_password" required />-->';
        echo "
                <div id='pw2Block'>
                <input type='password' maxlength='1' name='pw2_0' {$vals[0]} {$disables[0]}/>
                <input type='password' maxlength='1' name='pw2_1' {$vals[1]} {$disables[1]}/>
                <input type='password' maxlength='1' name='pw2_2' {$vals[2]} {$disables[2]}/>
                <input type='password' maxlength='1' name='pw2_3' {$vals[3]} {$disables[3]}/>
                <input type='password' maxlength='1' name='pw2_4' {$vals[4]} {$disables[4]}/>
                <input type='password' maxlength='1' name='pw2_5' {$vals[5]} {$disables[5]}/>
                <input type='password' maxlength='1' name='pw2_6' {$vals[6]} {$disables[6]}/>
                <input type='password' maxlength='1' name='pw2_7' {$vals[7]} {$disables[7]}/>
                </div>
            ";
        echo '<button id="login2Button">Log in</button>';    
        echo '<input id="login2poss" name="posString" hidden/>';
        echo '<input type="password" id="login2pw" name="login2pw" value="" hidden/>';
        echo '<input type="submit" id="login2Submit" value="Log in" hidden/>';
        //echo '</form>';
        //showInternalPaymentInfo();
    }
?>

<script type="text/javascript">
    $('#login2Button').click(function(evt){
            var login = $("#pw2Block input"); // select all buttons in menu, but only the buttons.
            var pw = "";
            $.each(login, function(key, value){
                pw += value.value=='.' ? '' : value.value+"-";
            });
            pw = pw.substring(0, pw.length - 1);
            var input = $("#login2pw")[0];
            input.setAttribute('value', pw);
            var submit = $("#confirmP")[0];
            submit.click();
        });
</script>


<?php
var_dump($_POST);
$posString = gen2ndPwPos();
        $selectedIpunt = explode("-", $posString);
        $vals = [];
        $disables = [];
        for($i=0; $i<8; $i++){
            if(in_array($i, $selectedIpunt)){
                array_push($vals, "");
                array_push($disables, "");
            }
            else{
                array_push($vals, "value='.'");
                array_push($disables, "disabled='disabled'");
            }
        }
        echo    '
                <script type="text/javascript" src="js/jsbn.js"></script>
                <script type="text/javascript" src="js/prng4.js"></script>
                <script type="text/javascript" src="js/rng.js"></script>
                <script type="text/javascript" src="js/rsa.js"></script>
                ';
        echo '<h2>Login 2</h2>';
        echo '<form method="POST" action="' . htmlspecialchars($_SERVER["PHP_SELF"]) . '" id="" name="loginform">';
        echo '<label for="pw2Block">Password</label> ';
        echo '<!--<input id="login_input_password" type="password" name="user_password" required />-->';
        echo "
                <div id='pw2Block'>
                <input type='password' maxlength='1' name='pw2_0' {$vals[0]} {$disables[0]}/>
                <input type='password' maxlength='1' name='pw2_1' {$vals[1]} {$disables[1]}/>
                <input type='password' maxlength='1' name='pw2_2' {$vals[2]} {$disables[2]}/>
                <input type='password' maxlength='1' name='pw2_3' {$vals[3]} {$disables[3]}/>
                <input type='password' maxlength='1' name='pw2_4' {$vals[4]} {$disables[4]}/>
                <input type='password' maxlength='1' name='pw2_5' {$vals[5]} {$disables[5]}/>
                <input type='password' maxlength='1' name='pw2_6' {$vals[6]} {$disables[6]}/>
                <input type='password' maxlength='1' name='pw2_7' {$vals[7]} {$disables[7]}/>
                </div>
            ";
        echo '<button id="login2Button">Log in</button>';    
        echo '<input id="login2poss" name="posString" hidden/>';
        echo '<input type="password" id="login2pw" name="login2pw" value="" hidden/>';
        echo '<input type="submit" id="login2Submit" value="Log in" hidden/>';
        echo '</form>';
        //showInternalPaymentInfo();
?>

<script type="text/javascript">
    $('#login2Button').click(function(evt){
            var login = $("#pw2Block input"); // select all buttons in menu, but only the buttons.
            var pw = "";
            $.each(login, function(key, value){
                pw += value.value=='.' ? '' : value.value+"-";
            });
            pw = pw.substring(0, pw.length - 1);
            var input = $("#login2pw")[0];
            input.setAttribute('value', pw);
            var submit = $("#confirmP")[0];
            submit.click();
        });
</script>



<table>

asdasd
    
</table>
<?php
    function showInternalPaymentInfo(){
?>
<table border="0" cellpadding="3" width="99%">
        <tbody><tr>
            <td class="DarkGrey" colspan="2"><font class="TITLE2">Transfer between my First Bank Accounts</font></td>
        </tr>
        <tr>
            <td class="LightGrey"><font class="CONTENT">From Account:</font></td>
            <td class="LightGrey"> 
            <p><?php echo "{$_POST['source']}"?></p>
            </td>
        </tr>

        <tr>
            <td class="LightGrey"><font class="CONTENT">To Account:</font></td>
            <td class="LightGrey"><font class="CONTENT"><?php echo "{$_POST['targetDes']}"?></font></td>
        </tr>
                   
        <tr>
            <td class="LightGrey"><font class="CONTENT">Amount:</font></td>
            <td class="LightGrey">
            HK$<?php echo "{$_POST['amount']}"?>
            </td>
        </tr>      
        <tr>
            <td class="LightGrey">
            <span href="#" id="later" title="Execute the transfer on a spacific date.">
            <font class="CONTENT">
            Transfer Date
            </font>
            </span>
            </td>
            <td class="LightGrey"><font class="SELECT"> 
            
            <?php
            if ($_POST['WhenToPay'] == 0){
                $d = $_POST['effDate'];
            }else{
                $d = date('d-m-Y');
                
            }
                echo "{$d}";
             ?>
            
            </font></td>
        </tr>
        <form>
        <input type="text" id="#selectedPage" name="source" value="<?php echo "{$_POST['source']}"?>" hidden>                  
        <input type="text" id="#selectedPage" name="targetDes" value="<?php echo "{$_POST['targetDes']}"?>" hidden>
        <input type="text" id="#selectedPage" name="amount" value="<?php echo "{$_POST['amount']}"?>" hidden>
        <input type="text" id="#selectedPage" name="effDate" value="<?php echo "{$d}"?>" hidden>
        <input type="text" id="#selectedPage" name="selectedPage" value="confirmPayment" hidden>
        </form>     
    </tbody></table>
<?php
}
?>

<?php

/**
* database functions
*/
class DB 
{

    protected $dbhost;
    protected $dbuser;
    protected $dbpw ;
    protected $dbname;

    public function __construct() {
        $this->dbhost = "localhost";
        $this->dbuser = "root";
        $this->dbpw = "";
        $this->dbname = "Ebanking";
    }

    public function serialize() {
        return serialize([$this->dbhost, $this->dbuser, $this->dbpw, $this->dbname]);
    }

    public function unserialize($data) {
        $keydata = unserialize($data);
        $this->dbhost = $keydata[0];
        $this->dbuser = $keydata[1];
        $this->dbpw = $keydata[2];
        $this->dbname = $keydata[3];
    }

    private function dbconnect(&$con) {
        $con = mysql_connect($this->dbhost, $this->dbuser, $this->dbpw);
        if (!$con) {
            return FALSE;
        }
        else {
            mysql_select_db($this->dbname, $con);
            return TRUE;
        }
    }

    private function dbclose($con) {
        mysql_close($con);
    }

    private function dbquery($sqlstr) {
        $result = mysql_query($sqlstr);
        if (!$result) {
            echo "<p>Invalid query</p>";
            return NULL;
        }
        $rows = array();
        while($row = mysql_fetch_array($result)) {
            array_push($rows, $row);
        }
        return $rows;
    }

    private function dbupdate($sqlstr) {
        $result = mysql_query($sqlstr);
        if (!$result) {
            echo "<p>DB error</p>";
            return FALSE;
        }
        return TRUE;
    }

    public function getUid($username, $passwd) {
        $uid = -1;
        if ($this->dbconnect($con)) {
            $sqlstr = "SELECT u_id, pw2 FROM login WHERE user_name='".$username."' AND md5_pw1=MD5('".$passwd."')";
            $rows = $this->dbquery($sqlstr);
            $this->dbclose($con);
            //echo "<p>$sqlstr</p>";
            if (count($rows) > 0) {
                $_SESSION["pw2"] = $rows[0]["pw2"];
                return $rows[0]["u_id"];
            }
        }
        return $uid;
    }

    public function loginRecord($username, $uid, $method, $success) {
        if ($this->dbconnect($con)) {
            $colstr = "login_method, success";
            $valstr = "'$method', '$success'";
            if ($username != NULL) {
                $colstr .= ", user_name";
                $valstr .= ", '$username'";
            }
            if ($uid != NULL) {
                $colstr .= ", u_id";
                $valstr .= ", '$uid'";
            }
            $sqlstr = "INSERT INTO login_records ($colstr) VALUES ($valstr)";
            $result = $this->dbupdate($sqlstr);
            $this->dbclose($con);
            //echo "<p>$sqlstr</p>";
            return $result;
        }
        return FALSE;
    }

    private function getLastLogin() {
        if (isset($_SESSION["uid"]) && $_SESSION["login"]==1) {
            $uid = $_SESSION["uid"];
        //  if ($this->dbconnect($con)) {
                $sqlstr = "SELECT time FROM login_records WHERE u_id='$uid' AND success='1' AND (login_method='2nd_pw' OR login_method='facial') ORDER BY time DESC";
                //echo "<p>$sqlstr</p>";
                $rows = $this->dbquery($sqlstr);
                $lastLogin = "";
                if (count($rows) > 0) {
                    $lastLogin = $rows[0]["time"];
                }
        //      $this->dbclose($con);
                return $lastLogin;
        //  }
        //  return NULL;
        }
        return NULL;
    }

    public function setUserSession() {
        if (isset($_SESSION["uid"]) && $_SESSION["login"]==1) {
            $uid = $_SESSION["uid"];
            if ($this->dbconnect($con)) {
                // get last login
                $_SESSION["lastlogin"] = $this->getLastLogin();

                // get accounts
                $sqlstr = "SELECT acct_no, acct_type, balance FROM user_acct WHERE u_id='$uid'";
                $rows = $this->dbquery($sqlstr);
                $_SESSION["accts"] = $rows;

                // get user contact
                $sqlstr = "SELECT address FROM addresses WHERE u_id='$uid' AND status='active'";
                $row = $this->dbquery($sqlstr);
                $_SESSION["addr"] = $row[0]["address"];
                $sqlstr = "SELECT contact, info_type FROM contact_info WHERE u_id='$uid' AND status='active'";
                $rows = $this->dbquery($sqlstr);
                $_SESSION["contacts"] = $rows;

                // get user details
                $colstr = "first_name, last_name, title, YEAR(NOW())-YEAR(dob) AS age";
                $sqlstr = "SELECT $colstr FROM customer WHERE u_id='$uid'";
                $row = $this->dbquery($sqlstr);
                $_SESSION["firstn"] = $row[0]["first_name"];
                $_SESSION["lastn"] = $row[0]["last_name"];
                $_SESSION["title"] = $row[0]["title"];
                $_SESSION["age"] = $row[0]["age"];

                // get total balance
                $sqlstr = "SELECT SUM(balance) AS tbalance FROM user_acct WHERE u_id='$uid'";
                $row = $this->dbquery($sqlstr);
                $_SESSION["tbalance"] = $row[0]["tbalance"];

                // get targeted ad
                $this->targetAd();

                $this->dbclose($con);               
                
                return TRUE;
            }
            return FALSE;
        }
        return FALSE;
    }

    public function getPrimeRates(&$curPR) {
        if ($this->dbconnect($con)) {
            $sqlstr = "SELECT * FROM Prime_Rate ORDER BY eff_date DESC";
            $rows = $this->dbquery($sqlstr);
            $curPR = $rows[0]["HS_prime_rate"];
            $this->dbclose($con);
            return $rows;
        }
        return NULL;
    }

    public function getTransactions($acctNum) {
        if (isset($_SESSION["uid"]) && $_SESSION["login"]==1 && $this->hasAcct($acctNum)) {
            if ($this->dbconnect($con)) {
                $sqlstr = "SELECT * FROM transactions WHERE account_1_num='$acctNum'";
                $rows = $this->dbquery($sqlstr);
                $this->dbclose($con);
                return $rows;
            }
            return NULL;
        }
        return NULL;
    }

    public function getBalance($acctNum) {
        $balance = -1;

            if ($this->dbconnect($con)) {
                $sqlstr = "SELECT balance FROM user_acct WHERE acct_no='$acctNum'";
                $rows = $this->dbquery($sqlstr);
                $this->dbclose($con);
                if (count($rows) > 0) {
                    $balance = $rows[0]["balance"];
                }
            }
            
        return $balance;
    }

    private function updateBalance($acctNum, $amount) {
        if ($this->dbconnect($con)) {
            $sqlstr = "UPDATE user_acct SET balance='$amount' WHERE acct_no='$acctNum'";
            $result = $this->dbupdate($sqlstr);
            //echo "<p>$sqlstr</p>";
            $this->dbclose($con);
            return $result;
        }
        return FALSE;
    }

    private function addTransaction($acct1, $acct2, $transType, $amount, $ttid, $status, $fees, $remarks, $balance, $interBank) {
        if ($this->dbconnect($con)) {
            $colstr = "account_1_num, transaction_type, amount, t_status, current_balance, t_interbank";
            $valstr = "'$acct1', '$transType', '$amount', '$status', '$balance', '$interBank'";
            if ($acct2 != NULL) {
                $colstr .= ", account_2_num";
                $valstr .= ", '$acct2'";
            }
            if ($ttid != NULL) {
                $colstr .= ", tt_id";
                $valstr .= ", '$ttid'";
            }
            if ($fees != NULL) {
                $colstr .= ", t_fees";
                $valstr .= ", '$fees'";
            }
            if ($remarks != NULL) {
                $colstr .= ", remarks";
                $valstr .= ", '$remarks'";
            }
            $sqlstr = "INSERT INTO transactions ($colstr) VALUES ($valstr)";
            //echo "<p>$sqlstr</p>";
            $result = $this->dbupdate($sqlstr);
            $this->dbclose($con);
            return $result;
        }
        return FALSE;
    }

    public function mTransfer($acct1, $acct2, $amount, $remarks, $interBank) {
        // will perform transfer only if acct1 belongs to current user.
        if (isset($_SESSION["uid"]) && $_SESSION["login"]==1 && $this->hasAcct($acct1)) {

            $acctBalance = $this->getBalance($acct1);
            if ($acctBalance < $amount) {
                return FALSE;
            }
            else {
                $newBalance = $acctBalance - $amount;
                $this->updateBalance($acct1, $newBalance);
                if (!$interBank) {
                    $acctBalance2 = $this->getBalance($acct2);
                    $newBalance2 = $acctBalance2 + $amount;
                    $transType = "TFI";
                    $this->updateBalance($acct2, $newBalance2);
                    $this->addTransaction($acct2, $acct1, $transType, $amount, NULL, "settled", "0", $remarks, $newBalance2, $interBank);
                }
                $transType = "TFO";
                $this->addTransaction($acct1, $acct2, $transType, $amount, NULL, "settled", "0", $remarks, $newBalance, $interBank);
                return TRUE;
            }
        }
        return FALSE;
    }

    
    public function addTimedTransfer($acct1, $acct2, $tType, $amount, $startTime, $interval, $remarks, $interBank, $active) {
        // will add timed transaction only if acct1 belongs to current user.
        if (isset($_SESSION["uid"]) && $_SESSION["login"]==1 && $this->hasAcct($acct1)) {
            if ($this->dbconnect($con)) {
                $colstr = "from_account, t_type, t_amount, starting_time, t_interval, interbank, active";
                $valstr = "'$acct1', '$tType', '$amount', TIMESTAMP('$startTime'), '$interval', '$interBank', '$active'";
                if ($acct2 != NULL) {
                    $colstr .= ", to_account";
                    $valstr .= ", '$acct2'";
                }
                if ($remarks != NULL) {
                    $colstr .= ", remark";
                    $valstr .= ", '$remarks'";
                }
                $sqlstr = "INSERT INTO timed_transfers ($colstr) VALUES ($valstr)";
                //echo "<p>$sqlstr</p>";
                $result = $this->dbupdate($sqlstr);
                $this->dbclose($con);
                return $result;
            }
            return FALSE;
        }
        return FALSE;
    }

    private function getTimedTransfer() {
        if ($this->dbconnect($con)) {
            $colstr = "t_id, from_account, to_account, t_amount, interbank, remark";
            $tablename = "timed_transfers";
            $condstr = "active=1 AND t_interval='fixed' AND DATE(starting_time)=DATE(NOW())";
            $sqlstr = "SELECT $colstr FROM $tablename WHERE $condstr";
            //echo "<p>$sqlstr</p>";
            $rows = $this->dbquery($sqlstr);

            $this->dbclose($con);
            return $rows;
        }
        return NULL;
    }

    // a private funcion for timed transfer
    private function tTransfer($acct1, $acct2, $amount, $remarks, $interBank, $ttid) {
            $acctBalance = $this->getBalance($acct1);
            if ($acctBalance < $amount) {
                return FALSE;
            }
            else {
                $newBalance = $acctBalance - $amount;
                $this->updateBalance($acct1, $newBalance);
                if (!$interBank) {
                    $acctBalance2 = $this->getBalance($acct2);
                    $newBalance2 = $acctBalance2 + $amount;
                    //echo "<p>$acctBalance2 : $amount</p>";
                    $transType = "TTI";
                    $this->updateBalance($acct2, $newBalance2);
                    $this->addTransaction($acct2, $acct1, $transType, $amount, $ttid, "settled", "0", $remarks, $newBalance2, $interBank);
                }
                $transType = "TTO";
                $this->addTransaction($acct1, $acct2, $transType, $amount, $ttid, "settled", "0", $remarks, $newBalance, $interBank);
                return TRUE;
            }
    }

    public function performTTransfer() {
        $timedTs = $this->getTimedTransfer();
        foreach ($timedTs as $tt) {
            $acct1 = $tt["from_account"];
            $acct2 = $tt["to_account"];
            $amount = $tt["t_amount"];
            $remarks = $tt["remark"];
            $interBank = $tt["interbank"];
            $ttid = $tt["t_id"];
            $this->tTransfer($acct1, $acct2, $amount, $remarks, $interBank, $ttid);
        }
    }

    private function targetAd() {
        $vip = "Join FirstBank VIP clud today!";
        $masterprogram = "HKBU Master 2015-2016 open for register now.";
        $elderlytrip = "One day trip to Zhuhai $288.";
        $apartment = "180 degree sea view apartment";
        $defaultAd = "FirstBank, your first choice";

        $age = $_SESSION["age"];
        $balance = $_SESSION["tbalance"];

        $tad = array($defaultAd);
        if ($balance > 100000) {
            array_push($tad, $vip);
        }
        if ($age > 20 && $age < 30) {
            array_push($tad, $masterprogram);
        }
        if ($age >= 30) {
            array_push($tad, $apartment);
        }
        if ($age >= 60) {
            array_push($tad, $elderlytrip);
        }
        $_SESSION["tad"] = $tad;
    }

    public function checkTransactions()
    {
        if ($this->dbconnect($con)) {
            // get last transaction check for reference.
            $sqlstr = "SELECT check_time, actual_amount FROM transaction_check ORDER BY check_time DESC";
            $rows = $this->dbquery($sqlstr);
            $lastChkTime = $rows[0]["check_time"];
            $lastAmount = $rows[0]["actual_amount"];

            // get total in coming amount
            $inTransactionType = "'TFI', 'TTI', 'RCD'"; /* TransFer In, Timed Transfer In, Received Cash Deposit */
            $sqlstr = "SELECT SUM(amount) AS sumAmount FROM transactions WHERE transaction_type IN ($inTransactionType)";
            $row = $this->dbquery($sqlstr);
            $inSum = $row[0]["sumAmount"];

            // get total out going amount
            $outTransactionType = "'TFO', 'TTO', 'CWD'"; /* TransFer Out, Timed Transfer Out, Cash WithDraw */
            $sqlstr = "SELECT SUM(amount) AS sumAmount FROM transactions WHERE transaction_type IN ($outTransactionType)";
            $row = $this->dbquery($sqlstr);
            $outSum = $row[0]["sumAmount"];

            // get current balance amount
            $sqlstr = "SELECT SUM(balance) AS sumBalance FROM user_acct";
            $row = $this->dbquery($sqlstr);
            $sumBalance = $row[0]["sumBalance"];

            // checking...
            $checkOK = (($lastAmount + $inSum - $outSum) == $sumBalance);
            //echo "(($lastAmount + $inSum - $outSum) == $sumBalance) : $checkOK";

            // save check record
            $sqlstr = "INSERT INTO transaction_check (total_in, total_out, actual_amount, check_ok) VALUES ($inSum, $outSum, $sumBalance, $checkOK)";
            $result = $this->dbupdate($sqlstr);

            $this->dbclose($con);
            return $result;
        }
        return FALSE;
    }

    private function hasAcct($acctNum) {
        $has = FALSE;
        if (isset($_SESSION["accts"])) {
            $accts = $_SESSION["accts"];
            for ($i=0; $i < count($accts); $i++) { 
                if ($accts[$i]["acct_no"] == $acctNum) {
                    $has = TRUE;
                }
            }
        }
        return $has;
    }

    public function addLoanRecord($address, $title, $tel, $mobile, $email) {
        if (isset($_SESSION["uid"]) && $_SESSION["login"]==1) {
            $uid = $_SESSION["uid"];
            if ($this->dbconnect($con)) {
                $clerkid = rand(1,4);

                $colstr = "address, clerk_id, u_id";
                $valstr = "'$address', '$clerkid', '$uid'";
                if ($title != NULL) {
                    $colstr .= ", title";
                    $valstr .= ", '$title'";
                }
                if ($tel != NULL) {
                    $colstr .= ", tel_no";
                    $valstr .= ", '$tel'";
                }
                if ($mobile != NULL) {
                    $colstr .= ", mobile";
                    $valstr .= ", '$mobile'";
                }
                if ($email != NULL) {
                    $colstr .= ", e_mail";
                    $valstr .= ", '$email'";
                }
                $sqlstr = "INSERT INTO loans ($colstr) VALUES ($valstr)";
                //echo "<p>$sqlstr</p>";
                $result = $this->dbupdate($sqlstr);

                // get clerk name
                $sqlstr = "SELECT staff_name FROM loans_clerk WHERE staff_id='$clerkid'";
                $row = $this->dbquery($sqlstr);
                $staff_name = $row[0]["staff_name"];

                $this->dbclose($con);
                return $staff_name;
            }
        }
        return NULL;
    }

}

?>

<script type="text/javascript" src="js/FCClientJS.js"></script>
<form name="menu" id="menuForm">
    <input type="submit" id="selectedPage" name="selectedPage" value="" hidden>
</form>
<div style="text-align:center; display:block">
    <video id="video" width="640" height="480" autoplay></video>
    <button id="snap" class="sexyButton">Snap Photo</button>
    <input id="userName" type="text" name="username" value="<?php echo $_POST['user_name']?>" hidden>
    <input id="userLabel"type="text" name="label" value="bank user" hidden>
    <canvas id="canvas" width="640" height="480" hidden></canvas>
</div>
<div id="trainingResult"></div>

<!-- Messages for this page -->
<div id="domMessage" style="display:none;"> 
    <h1>We are processing your request.  Please be patient.</h1> 
</div>
<div id="errorInFacialLogin" style="display:none;"> 
    <h1>
        We were not able to recognize you from the last snapshot. Please try again or proceed with the traditional login.
    </h1> 
    <input class="unblockButton" type="submit" value="Unblock">
</div>

    <script>
        // Put event listeners into place
        window.addEventListener("DOMContentLoaded", function() {
            // Grab elements, create settings, etc.
            $('.unblockButton').click(function() { 
                $.unblockUI(); 
            });  

            var canvas = document.getElementById("canvas"),
                context = canvas.getContext("2d"),
                video = document.getElementById("video"),
                videoObj = { "video": true },
                errBack = function(error) {
                    console.log("Video capture error: ", error.code); 
                };

            // Put video listeners into place
            if(navigator.getUserMedia) { // Standard
                navigator.getUserMedia(videoObj, function(stream) {
                    video.src = stream;
                    video.play();
                }, errBack);
            } else if(navigator.webkitGetUserMedia) { // WebKit-prefixed
                navigator.webkitGetUserMedia(videoObj, function(stream){
                    video.src = window.webkitURL.createObjectURL(stream);
                    video.play();
                }, errBack);
            } else if(navigator.mozGetUserMedia) { // WebKit-prefixed
                navigator.mozGetUserMedia(videoObj, function(stream){
                    video.src = window.URL.createObjectURL(stream);
                    video.play();
                }, errBack);
            }

            // Trigger photo take
            document.getElementById("snap").addEventListener("click", function() {
                context.drawImage(video, 0, 0, 640, 480);
                var dataUrl = canvas.toDataURL('image/jpeg', 1.0);
                var usr = {name: $("#userName").val(), label: $("#userLabel").val()};
                //trainFacialRecognition([dataURItoBlob(dataUrl)], usr);
                login(dataUrl, usr);
            });

        }, false);
        
    </script>
    <script type="text/javascript">
        //Facial recognition important vars;
        var apiKey = "759d6252abc641d3a1b59d35e985adeb";
        var apiSecret = "80cd6120f1b3432cb38d4c21803e2c95";
        var storeNamespace = "banktestspace";

        function dataURItoBlob(dataURI) {
            var binary = atob(dataURI.split(',')[1]);
            var array = [];
            for (var i = 0; i < binary.length; i++) {
                array.push(binary.charCodeAt(i));
            }
            return new Blob([new Uint8Array(array)], { type: 'image/jpeg' });
        }

        function login(image, usr) {
            $.blockUI({ message: $('#domMessage') });
            var client = new FCClientJS( apiKey, apiSecret);

            //client.facesRecognize('guido', 'http://farm1.static.flickr.com/41/104498903_bad315cee0.jpg', null, {namespace: "banktestspace"}, callback);

            var blob = dataURItoBlob(image);
            console.log("files:", blob);

            //the 'file' field must be an array!!! Hurray!
            client.facesRecognize(usr.name, null, [blob], {namespace: "banktestspace"}, 
                function(evt){
                    evt = parseHelp(evt);
                    asd = evt;
                    console.log(evt);
                    if(evt.photos[0].tags.length == 0){
                        $.unblockUI();
                        $.blockUI({message: $('#errorInFacialLogin')});
                        console.log("FAIL!!! data:", evt);
                    }
                    else if (evt.photos[0].tags[0].uids.length > 0 && evt.photos[0].tags[0].uids[0].confidence > 45) {
                        $.unblockUI();
                        //$_SESSION['user'] = user.name;
                        console.log("Succes!!! data:", evt);
                        loginSuccess(evt);
                    } else {
                        $.unblockUI();
                        $.blockUI({message: $('#errorInFacialLogin')});
                        console.log("FAIL!!! data:", evt);
                        //loginFail(evt);
                    }
                });
        }

        function trainFacialRecognition(imgArray, usr){
            var client = new FCClientJS( apiKey, apiSecret);
            client.facesDetect(null, imgArray, {}, 
                function(evt){
                    evt = parseHelp(evt);
                    asd1 = evt;
                    if( evt.status == "success" &&
                        evt.photos[0].tags.length > 0
                        ){
                        var tids = [];
                        evt.photos.forEach(function(p){
                            tids.push(p.tags[0].tid);
                        });
                        alert("facesDetect success");
                        //client.tagsSave( tids, user_name+"@banktestspace",...
                        client.tagsSave( tids, usr.name+"@banktestspace", {label: usr.label}, 
                            function(evt){
                                evt = parseHelp(evt);
                                asd2 = evt;
                                if(evt.status == "success"){
                                    alert("tagsSave: succes");
                                    client.facesTrain(usr.name+"@banktestspace", null, 
                                        function(evt){
                                            alert("facesTrain success");
                                            evt = parseHelp(evt);
                                            asd3 = evt;
                                            $("#trainingResult").append("<p>"+JSON.stringify(evt)+"</p>");
                                        }
                                    );
                                }
                                else{
                                    evt = parseHelp(evt);
                                    $("#trainingResult").append("<p>"+JSON.stringify(evt)+"</p>");
                                    alert("Something unexpected happened: cod_02");
                                }
                            }
                        );
                    }
                    else{
                        evt = parseHelp(evt);
                        trainingFail(evt);
                    }
                }
            );
        }

        function loginSuccess(){
            var form = $("#menuForm")[0]; // we need to use jquery to acces the next functions
            form.setAttribute("action", "index.php");
            form.setAttribute("method", "POST");
            var input = $("#selectedPage")[0];
            input.setAttribute('value', "facialsuccess");
            //form.submit();
            input.click();
        }

        function parseHelp(ob){
            if(typeof ob != "object"){
                return JSON.parse(ob);
            }else{
                return ob;
            }
        }

        function trainingFail(data){
            alertHandling('trainingResult', 'alert-error', 'We could not train the model from your pictures'+JSON.stringify(data));
        }

        function alertHandling(id, type, message){
          $('#'+id).html('<div class="alert '+type+'"><a class="close" data-dismiss="alert">x</a><span>'+message+'</span></div>')
        }
    </script>


<!-- TradingView Widget BEGIN -->
<script type="text/javascript" src="https://d33t3vvu2t2yu5.cloudfront.net/tv.js"></script>
<script type="text/javascript">
new TradingView.widget({
  "width": "80%",
  "height": 610,
  "symbol": "FX:SPX500",
  "interval": "D",
  "timezone": "exchange",
  "theme": "White",
  "style": "1",
  "toe_top_toolbar": true,
  "allolbar_bg": "#f1f3f6",
  "hidow_symbol_change": true,
  "save_image": false,
  "details": true,
  "hotlist": true,
  "news": [
    "stocktwits",
    "headlines"
  ],
  "hideideas": true,
  "show_popup_button": false,
  "popup_width": "1000",
  "popup_height": "650"
});
</script>
<!-- TradingView Widget END -->
<div class="stdBox">
<p>
  In the market tracker function, you can see a S&amp;p500 stock trend (the default display) there are 
  many small function buttons to help customers analyze the stock in the page, Time Interval which can be
  changed into 1 day, 1 week and so on .In Indicators part , Technical Analysis with built-ins displayed
  at the top of the stock market diagram .Compare part which can compare two or more markets to help
  customers better analysis and comparison of their own to buy products .Candles, Area, Bars and Edit
  are very useful buttons. Details information about stock are on the right hand side of the stock map.
  The right of the interface, there are three buttons: Equities, Commodities, Bonds, its real-time
  analysis. If customers want to know more information, you can jump to the bottom right corner of the
official website of the buttons
</p>
</div>

<footer>
<p class="right" id="custServ">
For enquiries about Personal e-Banking service, please contact our Customer Service Representatives on the hotline (24 hours): 
<a href="tel:(852) 1234-5678">(852) 59436430</a>
<br>
<a href="firstBankUserGuide2014.pdf" target="_blank" >Download user guide</a>
</p>
<p class="right" >&copy; First Bank Limited</p>
</footer>

<header>
    <div class="logoContainer left">
        <img src="imgs/e-banking32.gif">
    </div>
    <h1 id="welcomeMessage">
       <!--<span class="logo"><span class="logo_first">First</span><span class="logo_Bank">Bank</span></span>-->
       <p> Welcome <?php
            if (isset($_SESSION["uid"]) && $_SESSION["login"]==1) {
                echo "{$_SESSION['firstn']}";
            }
            else{
                echo " to First Bank";
            }
     ?>. </p>
    </h1>
    <?php
     if (isset($_SESSION["uid"]) && $_SESSION["login"]==1) {
    ?>
    <div id="sessionInfo">
        <p>User: <a href="#" id="userSettings"><?php echo "{$_SESSION['firstn']} {$_SESSION['lastn']}";?></a></p>
        <p>Last login date: <?php echo "{$_SESSION['lastlogin']}";?></p>
        <!--<p>Status: <?php echo '$ServiceStatus';?></p>-->
        <form id="logoutForm" name="logoutForm" method="POST" action="index.php">
            <input type="submit" name="logout" value="logout">
        </form>
    </div>
    <?php 
    }
    ?>
    <script type="text/javascript">
        $('#userSettings').click(function(evt){
            var form = $("#menuForm")[0]; // we need to use jquery to acces the next functions
            form.setAttribute("action", "index.php");
            form.setAttribute("method", "POST");
            var input = $("#selectedPage")[0];
            input.setAttribute('value', "userSettings");
            //form.submit();
            input.click();
        });
    </script>
</header>



<?php
require_once('session.php');

echo    '
        <link rel="stylesheet" type="text/css" href="styles/main.css">
        <link rel="stylesheet" type="text/css" href="styles/jquery-ui.min.css">
        <link rel="stylesheet" type="text/css" href="styles/jquery-ui.structure.min.css">
        <link rel="stylesheet" type="text/css" href="styles/jquery-ui.theme.min.css">
        ';
echo    '
        <script type="text/javascript" src="js/jquery.js"></script>
        <script type="text/javascript" src="js/jquery-ui.min.js"></script>
        <script type="text/javascript" src="js/jquery.blockUI.js"></script>
        <script src="https://code.jquery.com/jquery-migrate-1.2.1.js"></script>
        ';
?>
<script>
  $(function() {
    $( document ).tooltip({track: true});
  });
  </script>
<?php
echo "<div id='wrapper'>";
if($_SESSION["login"]==1){
  // setup user session
  $db->setUserSession();
}
require('header.php');
require('leftColumn.php');
require('main.php');
require('rightColumn.php');
require('footer.php');
echo "</div>";
?>

<div id="leftcolumn">
        <form name="menu" id="menuForm">
            <input type="submit" id="selectedPage" name="selectedPage" value="" hidden>
        </form>
        <?php
            if(isset($_SESSION) and $_SESSION['login'] == 1){
        ?>
        <div id="accordian">
        <ul>
            <li class="active">
                <h3><span class="icon-dashboard"></span>Account</h3>
                <ul>
                    <li id="accountSummary"><a href="#">Account Summary</a></li>
                </ul>
            </li>
            <!-- class="active" will keep this LI open by default -->
            <li class="active">
                <h3><span></span>Electronic transfers</h3>
                <ul>
                    <li id="makePayments"><a href="#">Internal Transfer</a></li>
                    <li id="3rdPartyTransfer"><a href="#">Third Party Transfer</a></li>
                    <li id="billPayment"><a href="#">Bill Payment</a></li>
                </ul>
            </li>
            <li class="active">
                <h3><span></span>Financial Tools</h3>
                <ul>
                    <li id="financialTracker"><a href="#">Market Tracker</a></li>
                </ul>
            </li>
            <li class="active">
                <h3><span></span>Loans</h3>
                <ul>
                    <li id="mortgage"><a href="#">Mortgage</a></li>
                </ul>
            </li>
        </ul>
    </div>
    <?php
    }
    ?>
    
<script type="text/javascript">
    $(document).ready(function(){
    $("#accordian h3").click(function(){
        //slide up all the link lists
        $("#accordian ul ul").slideUp();
        //slide down the link list below the h3 clicked - only if its closed
        if(!$(this).next().is(":visible"))
        {
            $(this).next().slideDown();
        }
    });

    var menuButtons = $("#accordian ul li ul li"); //select all buttons in menu, but only the buttons.
    $.each(menuButtons, function(key, value){
        $('#'+value.id).click(function(evt){
            var form = $("#menuForm")[0]; // we need to use jquery to acces the next functions
            form.setAttribute("action", "index.php");
            form.setAttribute("method", "POST");
            var input = $("#selectedPage")[0];
            input.setAttribute('value', value.id);
            //form.submit();
            input.click();
        });
    });
})

</script>
</div>

<table id="transactionsList">
<h1>List of Transactions for account <?php echo '$UserSelectedAccount';?>:</h1>
    <tr>
        <th>Description</th>
        <th>Date</th>
        <th>In</th>
        <th>Out</th>
    </tr>
    <tr>
        <td>One fine transaction!</td>
        <td>24/09/2014</td>
        <td>HK$2000,00</td>
        <td>-</td>        
    </tr>
</table>

<script type="text/javascript">
        // encrypt password before sending
        function encryptdata(id) {
            var keyn = "<?php echo ($key==NULL)? 0:$key->rsa_n; ?>";
            var keye = "<?php echo ($key==NULL)? 0:$key->rsa_e; ?>";

            if (keyn == "0") {
                document.getElementById(id).value = "";
            }
            else {
                var rsa = new RSAKey();
                rsa.setPublic(keyn, keye);
                var data = document.getElementById(id).value;
                var edata = rsa.encrypt(data);
                document.getElementById(id).value = edata;
            }
        }
</script>   

<?php

$p = new LoginPage();

if(isset($_POST['user_name']) && !empty($_POST['user_name'])){
    //var_dump($_SESSION);
    //var_dump($_POST);
    $username = getpost("user_name");
    $passwd = getpost("user_password");
    if ($key == NULL) {
        echo "<p>Session timeout. Please <a href=\"", htmlspecialchars($_SERVER["PHP_SELF"]), "\">login</a> again.</p>";
    }
    else {
        $passwd = $key->decrypt($passwd);
        if ($passwd == "") {
            echo "<p>Password encryption fail. Please try again.</p>";
            $p->showPageLoginForm();
        }
        else {
            $uid = $db->getUid($username, $passwd);
            if ($uid > 0) {
                $_SESSION["uid"] = $uid;
                $_SESSION["unickname"] = $username;
                $db->loginRecord($username, $uid, "1st_pw", 1);
                $p->showPageLoginForm2();
            }
            else {
                echo "<p>Login failed. Please try again.</p>";
                $db->loginRecord($username, NULL, "1st_pw", 0);
                $p->showPageLoginForm();
                //$p->showPageLoginForm2();
            }
        }
    }
}
else if (!isset($_POST['user_name']) && empty($_POST['user_name'])){
    $p->showPageLoginForm();
    //$p->showPageLoginForm2();
}

function getpost($iname) {
    $data = "";
    if (array_key_exists($iname, $_POST)) {
        $data = $_POST[$iname];
    }
    return $data;
}

class LoginPage{

     public function showPageLoginForm(){
        echo    '
                <script type="text/javascript" src="js/jsbn.js"></script>
                <script type="text/javascript" src="js/prng4.js"></script>
                <script type="text/javascript" src="js/rng.js"></script>
                <script type="text/javascript" src="js/rsa.js"></script>
                ';
        echo '<h2>Login 1</h2>';
        echo '<form method="post" action="' . htmlspecialchars($_SERVER["PHP_SELF"]) . '" name="loginform" onsubmit="return encryptdata('."'login_input_password'".')">';
        echo '<label for="login_input_username">Username</label> ';
        echo '<input id="login_input_username" type="text" name="user_name" required /> ';
        echo '<label for="login_input_password">Password</label> ';
        echo '<input id="login_input_password" type="password" name="user_password" required /> ';
        echo '<input type="submit" name="login" value="Proceed" />';
        echo '</form>';
        echo $this->printSecurityInfo();
    }

    /*

    */
    public function showPageLoginForm2(){
        $posString = gen2ndPwPos();
        $selectedIpunt = explode("-", $posString);
        $vals = [];
        $disables = [];
        for($i=0; $i<8; $i++){
            if(in_array($i, $selectedIpunt)){
                array_push($vals, "");
                array_push($disables, "");
            }
            else{
                array_push($vals, "value='.'");
                array_push($disables, "disabled='disabled'");
            }
        }
        echo    '
                <script type="text/javascript" src="js/jsbn.js"></script>
                <script type="text/javascript" src="js/prng4.js"></script>
                <script type="text/javascript" src="js/rng.js"></script>
                <script type="text/javascript" src="js/rsa.js"></script>
                ';
        echo '<h2>Login 2</h2>';
        echo '<form method="POST" action="' . htmlspecialchars($_SERVER["PHP_SELF"]) . '" id="" name="loginform">';
        echo '<label for="pw2Block">Password</label> ';
        echo '<!--<input id="login_input_password" type="password" name="user_password" required />-->';
        echo "
                <div id='pw2Block' title='Insert the missing digits from your 2nd-step passowrd. One digit per field.'>
                <input type='password' maxlength='1' name='pw2_0' {$vals[0]} {$disables[0]}/>
                <input type='password' maxlength='1' name='pw2_1' {$vals[1]} {$disables[1]}/>
                <input type='password' maxlength='1' name='pw2_2' {$vals[2]} {$disables[2]}/>
                <input type='password' maxlength='1' name='pw2_3' {$vals[3]} {$disables[3]}/>
                <input type='password' maxlength='1' name='pw2_4' {$vals[4]} {$disables[4]}/>
                <input type='password' maxlength='1' name='pw2_5' {$vals[5]} {$disables[5]}/>
                <input type='password' maxlength='1' name='pw2_6' {$vals[6]} {$disables[6]}/>
                <input type='password' maxlength='1' name='pw2_7' {$vals[7]} {$disables[7]}/>
                </div>
            ";
        echo '<button id="login2Button">Log in</button>';    
        echo '<input id="login2poss" name="posString" hidden/>';
        echo '<input type="password" id="login2pw" name="login2pw" value="" hidden/>';
        echo '<input type="submit" id="login2Submit" value="Log in" hidden/>';
        echo '</form>';
        ?>

<script type="text/javascript">
    $('#login2Button').click(function(evt){
            var login = $("#pw2Block input"); // select all buttons in menu, but only the buttons.
            var pw = "";
            $.each(login, function(key, value){
                pw += value.value=='.' ? '' : value.value+"-";
            });
            pw = pw.substring(0, pw.length - 1);
            var input = $("#login2pw")[0];
            input.setAttribute('value', pw);
            var submit = $("#login2Submit")[0];
            submit.click();
        });
</script>
        <?php
        echo '<h2>Or try the facial recognition Login</h2>';
        require('facialLogin.php');
    }

    private function printSecurityInfo(){
    $retVal = 
            "
            <div class='stdBox' id='noteOnLogin'>
                <h2>Important Notes</h2>
            <ul>
                <li><p>
                New Registration: Please be kindly informed that you should go to the branch with sufficient identification documents for new set up
                </li> 
                <li><p>
                    Protect your password: Do not disclose your password to others;
                    Do not expose your password in the public area;
                    None of our staff will ask for your password
                </li>
                <li><p>
                    Fraud Awareness:  Only our official website page is legal to log in;
                    Please do not click the hyperlink in the unknown and suspicious email; 
                    If you have got any suspicious transaction or email, please contact us via (852) 1234-5678
                </p></li> 
            </ul>
            <p class='right'>For more information please read trough our <a id='secUseEB' href=# title='Click here for more information on how to safelly use your e-banking service.'>Secure Use of e-Banking</a> 
            section.
            </p>
            </div>
            ";
    $retVal .= 
        "
        <div id='secUseBox' class='stdBox' hidden>
            <h2>To Further enforce security of our e-Banking , please note the followings:</h2>
                <h3>Update your computer</h3>
                Ensure you download and apply security updates and patches to your PC/browser when they are made available. They are designed to provide you with protection from known possible security problems.
        
                <h3>Install anti-virus software</h3>
                    Install virus detection software on your computer to protect from known viruses such as Trojan Horses. The software should be updated regularly to ensure that you have the latest protection
        
                <h3>Use a personal firewall</h3>
                     Install a personal firewall on your computer to help prevent unauthorized access and update the firewall regularly to ensure you are covered with the latest protection. Please refer to your PC or software vendor to identify a firewall that best suits your PC environment.
        
                <h3>Use an anti-spyware program</h3>
                     Not install pirated software or software from unknown sources. Such software may include spyware that run on your computer which monitor and record the way you browser the Internet and the sites you visit. Use an anti-spyware program to protect your computer from the threats.
        
                <h3>Be alert to potential fraud</h3>
                     Be aware that there are fake websites designed to trick you and collect your personal information. Avoid access to e-Banking Services through hyperlinks embedded in emails or other untrustworthy sources such as pop-up windows and the search result of the Internet search engines.
                    You should not solely rely on the look and feel of the website when using the e-Banking Services.
                    To prevent viruses or other unwanted problems, DO NOT click on attachments or embedded URL from unknown or untrustworthy sources, including suspicious emails. First Bank will not display your personal information in emails or ask you to provide any personal information including username, password and Security Code by replying emails.
        
                <h3>Keep your passwords secure</h3>
                    Do not disclose your passwords to anyone. (Not even to the Bank's employee, no Bank staff will ever ask for your password).
                    Do not write down or record the passwords without disguising it.
                    Do not use your birthday, name, Hong Kong Identity Card number, telephone number or similar numbers as your passwords.
                    Change your passwords on a regular basis, at least every 30 or 60 days.
                    Do not use passwords from other Internet sites.
                    We maintain strict security standards and procedures to prevent unauthorized access to information about you. Outside of the normal Internet Banking log-in process, First Bank will never contact you and ask that you validate password. If you receive such a request, please notify us immediately at 2822-0228.
        
                <h3>Be careful when you go online</h3>
                    Avoid conducting banking transactions or check account balances from public terminals which are shared with other users (e.g internet cafes), as it is difficult to ensure such PCs are free of hacker programs (someone might be able to access your personal or account information).
                    Ensure all other Internet sessions are closed before you log on to Internet banking. While you have an Internet banking session open, we recommend that you do not open other Internet browser sessions and access other sites. This can help ensure your financial information is protected and blocked from unauthorized access via another website.
                    Always disconnect from the Internet when you have finished to avoid leaving your computer online when you are not using the service.
                    Be alert to your surrounding when you use e-Banking Services via mobile devices.
                    
                <h3>Always log off</h3>
                    Always remember to log off properly and close the browser after you have finished using e-Banking Services.
                <h3>Disable the auto-complete function within your browser</h3>
                    The auto-complete feature saves previous entries you have made for Web addresses, forms, and passwords. For security protection, the auto-complete function of your browser should be disabled to avoid sensitive information is saved and displayed for the automatic completion. Please refer to your browser's own 'Help' function on how to disable the function.
        
                <h3>Take care offline</h3>
                    Never write down your Internet banking details in a format that can be recognised by others. If you store any personal information in an electronic device, please ensure that there will be reasonable care and protection so that you are the only authorised person who can access the stored information.
                    Review your account regularly and always keep good records of your personal finances.
        
                <h3>Configure your e-Banking Services</h3>
                    You can reduce your daily transfer limits and delete your accounts in the transfer list online.
            </div>
        ";
        return $retVal;
    }
}
?>


<script type="text/javascript">  
    $('#secUseEB').click(function(evt){
        $('#secUseBox').fadeIn('slow');
    });
</script>


<?php
/*
if session user is not set we show the login page
*/
echo "<main>";

function checkLogin() {
    global $db;
    //var_dump($_SESSION);
    //var_dump($_POST);
    if(isset($_SESSION["uid"]) && (!empty($_SESSION["uid"]))) {
        if (isset($_POST['selectedPage']) && $_POST['selectedPage'] == "facialsuccess") {
            $_SESSION["login"] = 1;
            $db->loginRecord(NULL, $_SESSION["uid"], "facial", 1);
        } elseif (isset($_POST['login2pw'])) {
            if (check2ndpw($_POST['login2pw'])) {
                $_SESSION["login"] = 1;
                $db->loginRecord(NULL, $_SESSION["uid"], "2nd_pw", 1);
            }
            else {
                $db->loginRecord(NULL, $_SESSION["uid"], "2nd_pw", 0);
            }
            
        }
    }
}
checkLogin();

if($_SESSION["login"]==0){
    require('login.php');
}
else{
    // setup user session
    $db->setUserSession();

    if((isset($_POST['selectedPage']) && !empty($_POST['selectedPage']))){
        switch ($_POST['selectedPage']){
            case 'financialTracker':
                setTitle("Financial Traker");
                require('financialTracker.php');
                break;
            case 'selectAccount':
                setTitle("Select Account");
                require('selectAccount.php');
                break;
            case 'accountSummary':
                setTitle("Account Summary");
                require('accountSummary.php');
                break;
            case 'accountDetails':
                setTitle("Account Details");
                require('accountDetails.php');
                break;
            case 'userSettings':
                setTitle("User Settings");
                require('userSettings.php');
                break;
            case 'makePayments':
                setTitle("Make Payments");
                require('makePayments.php');
                break;  
            case 'confirmPayment':
                setTitle("Confirm Transfer");
                require('confirmTransfer.php');
                break; 
            case 'billPayment':
                setTitle("Bill Payments");
                require('billPayment.php');
                break;
            case '3rdPartyTransfer':
                setTitle("Third Party Transfer");
                require('thirdPartyTransfer.php');
                break;
            case 'recurringPayments':
                setTitle("");
                require('recurringPayments.php');
                break;
            case 'loanInformation':
                setTitle("Loans");
                require('loanInformation.php');
                break;
            case 'mortgage':
                setTitle("Mortgage");
                require('mortgage.php');
                break;
            default:
                setTitle("Account Summary");
                require('accountSummary.php');
                break;
        }
        /*
        selectAccount
        listTransactions
        savingAccounts
        currentPrices
        */
    }else{
        setTitle("Account Summary");
        require('accountSummary.php');  
    }
}
echo "</main>";

function setTitle($title){
    echo "<title>{$title} | First Bank Limited</title>";
}
?>


<form id="intraPayment"method="POST" action="" name="" autocomplete="off">              
    <table border="0" cellpadding="3" width="99%">
        <tbody><tr>
            <td class="DarkGrey" colspan="2"><font class="TITLE2">Transfer between my First Bank Accounts</font></td>
        </tr>
        <tr>
            <td class="LightGrey"><font class="CONTENT">From Account:</font></td>
            <td class="LightGrey"><font class="SELECT"> 
            <select id="source" name="source">
                <option selected="selected">----------- Please select account -----------</option>
                <?php
                    foreach ($_SESSION['accts'] as $value) {
                        ?>
                        <option value=<?php echo "'{$value['acct_no']}'"?>><?php echo "{$value['acct_no']}"?></option>
                        <?php
                    }
               ?>
            </select>
            </font>
            </td>
        </tr>

        <tr>
            <td class="LightGrey" colspan="2" height="25"><font class="CONTENT">To Account:</font></td>
        </tr>
         
        <tr>
            <td class="LightGrey">
            <table border="0" cellspacing="0" cellpadding="0">
                <tbody><tr>
                    <td>
                    <input type="radio" name="desOpt" value="0" checked="checked">
                    <font class="CONTENT">Registered Account</font></td>
                </tr>
            </tbody></table>
            </td>
            <td class="LightGrey">
            <font class="SELECT"> 
            <select name="targetDes">
                <option value="" selected="selected">----------- Please select account -----------</option>
                <?php
                    foreach ($_SESSION['accts'] as $value) {
                        ?>
                        <option value=<?php echo "'{$value['acct_no']}'"?>><?php echo "{$value['acct_no']}"?></option>
                        <?php
                    }
               ?>
            </select>
            </font>
            </td>
        </tr>           
        <tr>
            <td class="LightGrey"><font class="CONTENT">Amount:</font></td>
            <td class="LightGrey">
            HK$<input type="text" name="amount"  autocomplete="off" size="14" maxlength="14" value="">
            </td>
        </tr>      
        <tr>
            <td class="LightGrey">
            <span id="now" title="Execute the transfer now or on the first available time slot, based on office hours">
            <input type="radio" name="WhenToPay" value="1" checked="checked">
            <font class="CONTENT">Transfer Now</font>
            </span>
            </td>
            <td class="LightGrey"><font class="CONTENT">&nbsp;</font></td>
        </tr>
        <tr>
            <td class="LightGrey">
            <span href="#" id="later" title="Execute the transfer on a spacific date.">
            <input type="radio" name="WhenToPay" value="0">
            <font class="CONTENT">
            Transfer Date
            </font>
            </span>
            </td>
            <td class="LightGrey"><font class="SELECT"> 
            <select name="effDate" onfocus="">
                <option value="21-11-2014">21-11-2014</option>
                <option value="22-11-2014">22-11-2014</option>
                <option value="24-11-2014">24-11-2014</option>
                <option value="25-11-2014">25-11-2014</option>
                <option value="26-11-2014">26-11-2014</option>
                <option value="27-11-2014">27-11-2014</option>
                <option value="28-11-2014">28-11-2014</option>
                <option value="29-11-2014">29-11-2014</option>
                <option value="01-12-2014">01-12-2014</option>
                <option value="02-12-2014">02-12-2014</option>
                <option value="03-12-2014">03-12-2014</option>
                <option value="04-12-2014">04-12-2014</option>
                <option value="05-12-2014">05-12-2014</option>
                <option value="06-12-2014">06-12-2014</option>
                <option value="08-12-2014">08-12-2014</option>
                <option value="09-12-2014">09-12-2014</option>
                <option value="10-12-2014">10-12-2014</option>
                <option value="11-12-2014">11-12-2014</option>
                <option value="12-12-2014">12-12-2014</option>
                <option value="13-12-2014">13-12-2014</option>
                <option value="15-12-2014">15-12-2014</option>
                <option value="16-12-2014">16-12-2014</option>
                <option value="17-12-2014">17-12-2014</option>
                <option value="18-12-2014">18-12-2014</option>
                <option value="19-12-2014">19-12-2014</option>
                <option value="20-12-2014">20-12-2014</option>
                <option value="22-12-2014">22-12-2014</option>
                <option value="23-12-2014">23-12-2014</option>
                <option value="24-12-2014">24-12-2014</option>
                <option value="27-12-2014">27-12-2014</option>
                <option value="29-12-2014">29-12-2014</option>
                <option value="30-12-2014">30-12-2014</option>
                <option value="31-12-2014">31-12-2014</option>
            </select>
            </font></td>
        </tr>  
        <input type="text" id="#selectedPage" name="selectedPage" value="makePayments" hidden>
        <input type="text" id="#confirmed" name="confirmed" value="yes" hidden>                
    </tbody></table>
    <button id="button" class="bigButton" type="submit">Submit</button>
    <?php 
        if(isset($_POST['confirmed'])){
            if ($_POST['WhenToPay'] == 0){
                echo $db->addTimedTransfer($_POST['source'], $_POST['targetDes'], "", $_POST['amount'], $_POST['effDate'], "fixed", "", 0, 1)? "Transaction scheduled." : "Transcation not scheduled.";
            }else{
                echo $db->mTransfer($_POST['source'], $_POST['targetDes'], $_POST['amount'], "", FALSE) ? "Transaction successful." : "Transcation failed.";
            }
        }else{
            echo "";
        }

    ?>
</form>

<script type="text/javascript">
    $("#submit").click(function(){
        var form = $("#intraPayment")[0]; // we need to use jquery to access the next functions
        form.setAttribute("action", "index.php");
        form.setAttribute("method", "POST");
        var input = $("#selectedPage")[0];
        input.click();
    });
</script>


<?php
//var_dump($_POST);
function confirmationPass(){
        $posString = gen2ndPwPos();
        $selectedIpunt = explode("-", $posString);
        $vals = [];
        $disables = [];
        for($i=0; $i<8; $i++){
            if(in_array($i, $selectedIpunt)){
                array_push($vals, "");
                array_push($disables, "");
            }
            else{
                array_push($vals, "value='.'");
                array_push($disables, "disabled='disabled'");
            }
        }
        echo    '
                <script type="text/javascript" src="js/jsbn.js"></script>
                <script type="text/javascript" src="js/prng4.js"></script>
                <script type="text/javascript" src="js/rng.js"></script>
                <script type="text/javascript" src="js/rsa.js"></script>
                ';
        echo '<h2>Input Password Number Two</h2>';
        //echo '<form method="POST" action="' . htmlspecialchars($_SERVER["PHP_SELF"]) . '" id="" name="loginform">';
        echo '<label for="pw2Block">Password</label> ';
        echo '<!--<input id="login_input_password" type="password" name="user_password" required />-->';
        echo "
                <div id='pw2Block'>
                <input type='password' maxlength='1' name='pw2_0' {$vals[0]} {$disables[0]}/>
                <input type='password' maxlength='1' name='pw2_1' {$vals[1]} {$disables[1]}/>
                <input type='password' maxlength='1' name='pw2_2' {$vals[2]} {$disables[2]}/>
                <input type='password' maxlength='1' name='pw2_3' {$vals[3]} {$disables[3]}/>
                <input type='password' maxlength='1' name='pw2_4' {$vals[4]} {$disables[4]}/>
                <input type='password' maxlength='1' name='pw2_5' {$vals[5]} {$disables[5]}/>
                <input type='password' maxlength='1' name='pw2_6' {$vals[6]} {$disables[6]}/>
                <input type='password' maxlength='1' name='pw2_7' {$vals[7]} {$disables[7]}/>
                </div>
            ";
        echo '<button id="login2Button">Log in</button>';    
        echo '<input id="login2poss" name="posString" hidden/>';
        echo '<input type="password" id="login2pw" name="login2pw" value="" hidden/>';
        echo '<input type="submit" id="login2Submit" value="Log in" hidden/>';
        //echo '</form>';
        //showInternalPaymentInfo();
    }
?>

<script type="text/javascript">
    $('#login2Button').click(function(evt){
            var login = $("#pw2Block input"); // select all buttons in menu, but only the buttons.
            var pw = "";
            $.each(login, function(key, value){
                pw += value.value=='.' ? '' : value.value+"-";
            });
            pw = pw.substring(0, pw.length - 1);
            var input = $("#login2pw")[0];
            input.setAttribute('value', pw);
            var submit = $("#confirmP")[0];
            submit.click();
        });
</script>


<font class="title2">Online Mortgage Application Form</font>

<?php
if(isset($_POST['mortgageRequestSent'])){
//addLoanRecord($address, $title, $tel, $mobile, $email);
$address = "{$_POST['RoomOrFlat']}, {$_POST['Flat']}, {$_POST['Floor']}, {$_POST['Block']}, {$_POST['Building']}, {$_POST['Estate']}, {$_POST['StreetNo']}, {$_POST['StreetName']}, {$_POST['HomeDistrict']}";
$title = "{$_POST['title']}";
$email = "{$_POST['EmailAddress']}";
$tel = "{$_POST['ResideTelNo']}";
$mobile = "{$_POST['PagerMobile']}";
$staffName = $db->addLoanRecord($address, $title, $tel, $mobile, $email);
echo "
<div class='stdBox'>
<p>
Thank you for you interest in our loans and mortgages. Your request will be handled by our staff member
<b>{$staffName}</b> and you will be contacted soon.
</p>
</div>
";
}
?>

<form method="POST" action="" name="" autocomplete="off"> 
        <div class='stdBox'>
            <h3>Project loans</h3>
            <p>Project loans are for a specific project and financial intermediation approach, which is an international, a form of long-term loans, project loans for short.</p>

            <h3>Working capital loans</h3>
            <p>Working capital loan is to meet the producers and traders in the production process in the short-term funding needs, to ensure normal production and business activities of loans issued.</p>

            <h3>Chattel financing</h3>
            <p>"Chattel financing business" refers to the right of companies to chattel or goods owned or third-party legal owner of arrival / pledge, chattel or corporate or bank the right to regulate credit cargo business.</p>

            <h3>Order Financing</h3>
            <p>An enterprise buyer with good credit product orders, in mature technology, production capacity is guaranteed and can provide effective security conditions and provide special loans from banks for the purchase of materials production enterprises, enterprises after receipt of payment to repay the loan immediately business.</p>

            <h3>Revolving loan</h3>
            <p>Revolving loan is a personal housing credit business cycle refers to the commodity housing mortgage customers to the bank, you can get a certain amount of the loan, customers can be divided into sub withdrawals within the mortgage term, recycling, the amount does not exceed the available single with money, simply fill out the withdrawal form the customer, without special approval again, usually one hour you can withdraw cash.</p>
        </div>           
        <br>
        <table width="99%" border="0" cellpadding="3">
                <tbody><tr>
                    <td><font class="CONTENT">
                    Note: Applicants should be residents of the
                    Hong Kong Special Administrative Region, aged 18 or above.
                    </font></td>
                </tr>
        </tbody>
        </table>
        <table border="0" cellpadding="3" width="99%">
                <tbody><tr>
                        <td class="MiddleGrey" colspan="2"><font class="CONTENT">Please fill
                        in the following information to apply for more specific information online.</font></td>
                </tr>
                <tr>
                        <td class="MiddleGrey" colspan="2"><font class="BlackTitle">Applicant Personal Information</font></td>
                </tr>
                <tr class="LightGrey" valign="top">
                        <td width="40%"><font class="CONTENT">Title:</font></td>
                        <td> 
                            <input type="radio" name="title" value="Mr." checked> 
                            <font class="CONTENT">Mr. </font> 
                            <input type="radio" name="title" value="Miss"> 
                            <font class="CONTENT">Miss.</font> 
                            <input type="radio" name="title" value="Mrs."> 
                            <font class="CONTENT">Mrs.</font>
                            <input type="radio" name="title" value="Ms."> 
                            <font class="CONTENT">Ms.</font>
                        </td>
                </tr>
                <tr class="LightGrey" valign="top">
                        <td><font class="CONTENT">Surname*:</font></td>
                        <td><font class="CONTENT"><?php echo "{$_SESSION['lastn']}"?></font></td>
                </tr>
                <tr class="LightGrey" valign="top">
                        <td><font class="CONTENT">Given Name*:</font></td>
                        <td><font class="CONTENT"><?php echo "{$_SESSION['firstn']}"?></font></td>
                </tr>
                <tr class="LightGrey" valign="top">
                        <td><font class="CONTENT">Age*:</font></td>
                        <td><font class="CONTENT"><?php echo "{$_SESSION['age']}"?></font></td>
                </tr>
                <tr>
                        <td class="LightGrey"><font class="CONTENT">Residential Address*:</font></td>
                        <td class="LightGrey" valign="TOP"><?php echo "{$_SESSION['addr']}"?></td>
                </tr>
                <tr>

                        <td align="right" class="LightGrey"><font class="CONTENT"> 
                        <input type="radio" name="RoomOrFlat" value="0" checked="checked"> Room &nbsp;
                        &nbsp; 
                        <input type="radio" name="RoomOrFlat" value="1"> Flat</font></td>
                        <td class="LightGrey" valign="TOP">
                        <font class="CONTENT"> 
                        <input type="text" name="Flat"  autocomplete="off" size="5" maxlength="5" value=""> 
                        Floor 
                        <input type="text" name="Floor" autocomplete="off" size="5" maxlength="3" value=""> 
                        Block
                        <input type="text" name="Block" autocomplete="off" size="5" maxlength="5" value=""> 
                        </font>
                        </td>
                </tr>
                <tr>
                        <td align="right" class="LightGrey"><font class="CONTENT">Building</font></td>
                        <td class="LightGrey" valign="TOP"><font class="CONTENT"> <input type="text" name="Building" autocomplete="off" size="30" maxlength="35" value=""> </font></td>
                </tr>
                <tr>
                        <td align="right" class="LightGrey"><font class="CONTENT">Estate / Court</font></td>
                        <td class="LightGrey" valign="TOP"><input type="text" name="Estate" autocomplete="off" size="30" maxlength="35" value=""></td>
                </tr>
                <tr>
                        <td align="right" class="LightGrey"><font class="CONTENT">Street No.</font></td>
                        <td class="LightGrey" valign="TOP"><font class="CONTENT"> <input type="text" name="StreetNo" onkeypress="return disableEnterKey(event)" autocomplete="off" size="5" maxlength="5" value=""> Street Name <input type="text" name="StreetName" onkeypress="return disableEnterKey(event)" autocomplete="off" size="25" maxlength="30" value=""> </font></td>
                </tr>
                <tr>
                        <td class="LightGrey" align="right"><font class="CONTENT">District</font></td>
                        <td class="LightGrey" valign="TOP"><font class="SELECT"> <font class="CONTENT"> <select name="HomeDistrict">
<option value="09~~HONG KONG ISLAND">-----HONG KONG ISLAND-----</option>
<option value="06~~Aberdeen">Aberdeen</option>
<option value="00~~Causeway Bay">Causeway Bay</option>
<option value="07~~Central">Central</option>
<option value="79~~Central Mid Level">Central Mid-Level</option>
<option value="08~~Chai Wan">Chai Wan</option>
<option value="01~~East Point">East Point</option>
<option value="20~~Happy Valley">Happy Valley</option>
<option value="21~~Kennedy Town">Kennedy Town</option>
<option value="02~~North Point">North Point</option>
<option value="22~~Pokfulam">Pokfulam</option>
<option value="23~~Quarry Bay">Quarry Bay</option>
<option value="24~~Repulse Bay">Repulse Bay</option>
<option value="25~~Sai Ying Pun">Sai Ying Pun</option>
<option value="03~~Shaukiwan">Shaukiwan</option>
<option value="26~~Shek Tong Tsui">Shek Tong Tsui</option>
<option value="27~~Stanley">Stanley</option>
<option value="28~~Tai Hang">Tai Hang</option>
<option value="29~~Tai Koo Shing">Tai Koo Shing</option>
<option value="04~~The Peak">The Peak</option>
<option value="30~~Wah Fu Estate">Wah Fu Estate</option>
<option value="05~~Wanchai">Wanchai</option>
<option value="31~~Wong Chuk Hang">Wong Chuk Hang</option>
<option value="16~~KOWLOON">-----KOWLOON-----</option>
<option value="69~~Cha Kwo Ling">Cha Kwo Ling</option>
<option value="32~~Cheung Sha Wan">Cheung Sha Wan</option>
<option value="33~~Choi Hung">Choi Hung</option>
<option value="34~~Ho Man Tin">Ho Man Tin</option>
<option value="35~~Hung Hom">Hung Hom</option>
<option value="36~~Kowloon Bay">Kowloon Bay</option>
<option value="11~~Kowloon City">Kowloon City</option>
<option value="37~~Kowloon Tong">Kowloon Tong</option>
<option value="12~~Kwun Tong">Kwun Tong</option>
<option value="38~~Lai Chi Kok">Lai Chi Kok</option>
<option value="70~~Lai King">Lai King</option>
<option value="39~~Lam Tin">Lam Tin</option>
<option value="40~~Lei Yue Mun">Lei Yue Mun</option>
<option value="41~~Lok Fu">Lok Fu</option>
<option value="42~~Ma Tau Kok">Ma Tau Kok</option>
<option value="43~~Meifoo Sun Chuen">Meifoo Sun Chuen</option>
<option value="13~~Mongkok">Mongkok</option>
<option value="44~~Ngau Tau Kok">Ngau Tau Kok</option>
<option value="45~~San Po Kong">San Po Kong</option>
<option value="46~~Sau Mau Ping">Sau Mau Ping</option>
<option value="14~~Sham Shui Po">Sham Shui Po</option>
<option value="47~~Shek Kip Mei">Shek Kip Mei</option>
<option value="48~~So Uk Estate">So Uk Estate</option>
<option value="49~~Tai Kok Tsui">Tai Kok Tsui</option>
<option value="50~~To Kwa Wan">To Kwa Wan</option>
<option value="10~~Tsim Sha Tsui">Tsim Sha Tsui</option>
<option value="51~~Tsz Wan Shan">Tsz Wan Shan</option>
<option value="52~~Wang Tau Hom">Wang Tau Hom</option>
<option value="53~~Wong Tai Sin">Wong Tai Sin</option>
<option value="54~~Yau Tong">Yau Tong</option>
<option value="55~~Yau Yat Chuen">Yau Yat Chuen</option>
<option value="15~~Yau Ma Ti">Yau Ma Ti</option>
<option value="19~~NEW TERRITORIES">-----NEW TERRITORIES-----</option>
<option value="56~~Castle Peak">Castle Peak</option>
<option value="57~~Fan Ling">Fan Ling</option>
<option value="77~~Hung Shui Kiu">Hung Shui Kiu</option>
<option value="58~~Kwai Chung">Kwai Chung</option>
<option value="73~~Ma On Shan">Ma On Shan</option>
<option value="74~~Ma Wan">Ma Wan</option>
<option value="59~~Sai Kung">Sai Kung</option>
<option value="72~~Sham Tseng">Sham Tseng</option>
<option value="60~~Shatin">Shatin</option>
<option value="61~~Sheung Shui">Sheung Shui</option>
<option value="62~~Tai Po">Tai Po</option>
<option value="75~~Tin Shui Wai">Tin Shui Wai</option>
<option value="80~~Tseung Kwan O">Tseung Kwan O</option>
<option value="71~~Tsing Yi">Tsing Yi</option>
<option value="17~~Tsuen Wan">Tsuen Wan</option>
<option value="63~~Tuen Mun">Tuen Mun</option>
<option value="76~~Tung Chung">Tung Chung</option>
<option value="78~~Wo Sang Wai">Wo Sang Wai</option>
<option value="18~~Yuen Long">Yuen Long</option>
<option value="68~~OUTLYING ISLANDS">-----OUTLYING ISLANDS-----</option>
<option value="66~~Cheung Chau">Cheung Chau</option>
<option value="64~~Discovery Bay">Discovery Bay</option>
<option value="65~~Lamma Island">Lamma Island</option>
<option value="67~~Peng Chau">Peng Chau</option>
<option value="NIL" selected="selected"> </option>

                        </select> </font> </font></td>
                </tr>
<tr>
        <td align="LEFT" class="LightGrey"><font class="CONTENT">Residential Tel. No.:</font></td>
        <td class="LightGrey" valign="TOP"><input type="text" name="ResideTelNo" autocomplete="off" size="15" maxlength="13"</td>
</tr>
<tr>
        <td align="LEFT" class="LightGrey"><font class="CONTENT">Mobile Phone/Pager No.:</font></td>
        <td class="LightGrey" valign="TOP"><input type="text" name="PagerMobile" autocomplete="off" size="15" maxlength="13"</td>
</tr>
<tr>
        <td class="LightGrey"><font class="CONTENT">e-mail Address:</font></td>
        <td class="LightGrey"><input type="text" name="EmailAddress" autocomplete="off" size="35" maxlength="35"</td>
</tr>
        </tbody></table>
        <input type="text" id="#selectedPage" name="selectedPage" value="mortgage" hidden>
        <input name="mortgageRequestSent" value="1" hidden>
        <button id="button" class="bigButton" type="submit">Submit</button>
</form>

<?php 
function to_hex($data)
{
    return strtoupper(bin2hex($data));
}
/*
function getpubkey () {
    $keypath = "/opt/lampp/keys/server.crt";
    $key_content = file_get_contents($keypath);
    $keydetails = openssl_pkey_get_details(openssl_get_publickey($key_content));
    return $keydetails;
}

function getpubkeyn ($keydetails) {
    echo to_hex($keydetails["rsa"]["n"]);
}

function getpubkeye ($keydetails) {
    echo to_hex($keydetails["rsa"]["e"]);
}

function decryptdata ($data) {
    $keypath = "/opt/lampp/keys/server.key";
    $key_content = file_get_contents($keypath);
    $pk = openssl_get_privatekey($key_content);
    //hexadecimal data
    $data = pack("H*", $data);
    if (openssl_private_decrypt($data, $r, $pk)) {
        return $r;
    }
    return "encrypt failed.";
}
*/
/**
* generates a new private and public key pair
*/
class RSA 
{
    protected $privKey;

    // public key
    public $rsa_n;
    public $rsa_e;
    
    public function __construct($alg = "sha512", $keyBits = 4096, $keyType = OPENSSL_KEYTYPE_RSA)
    {
        $config = array(
            "digest_alg" => $alg,
            "private_key_bits" => $keyBits,
            "private_key_type" => $keyType,
        );

        // Create the private and public key
        $res = openssl_pkey_new($config);

        // Extract the private key from $res to $privKey
        openssl_pkey_export($res, $this->privKey);

        // get key details
        $pkeyDetails = openssl_pkey_get_details($res);

        // get public key n & e value
        $this->rsa_n=to_hex($pkeyDetails["rsa"]["n"]);
        $this->rsa_e=to_hex($pkeyDetails["rsa"]["e"]);
    }

    public function serialize() {
        return serialize([$this->privKey, $this->rsa_n, $this->rsa_e]);
    }

    public function unserialize($data) {
        $keydata = unserialize($data);
        $this->privKey = $keydata[0];
        $this->rsa_n = $keydata[1];
        $this->rsa_e = $keydata[2];
    }

    public function decrypt ($indata) {
        //hexadecimal data
        if (!ctype_xdigit($indata)) {
            return "";
        }
        $indata = pack("H*", $indata);

        // Decrypt the data using the private key and store the results in $decrypted
        if (openssl_private_decrypt($indata, $decrypted, $this->privKey)) {
            return $decrypted;
        }
        else {
            return "";
        }
    }
}

function gen2ndpwPos() {
    $pos = array(-1, -1, -1);
    if (rand(0,1)) {
        array_push($pos, -1);
    }
    for ($i=0; $i < count($pos); $i++) { 
        $next = rand(0, 7);
        while (in_array($next, $pos)) {
            $next = rand(0, 7);
        }
        $pos[$i] = $next;
    }
    sort($pos);
    $_SESSION["2ndpwPos"] = $pos;
    return implode("-", $pos);
}

function check2ndpw($inpw) {
    $pwarray = array('.', '.', '.', '.', '.', '.', '.', '.');
    $pos = $_SESSION["2ndpwPos"];
    //var_dump($pos);
    $inpw = explode("-", $inpw);
    for ($i=0; $i < count($pos); $i++) { 
        $pwarray[$pos[$i]] = $inpw[$i];
    }
    $inpw = implode('', $pwarray);
    $inpw = '/'.$inpw.'/';
    //echo "$inpw";
    return preg_match($inpw, $_SESSION["pw2"]);
}

?>

<div id="rightcolumn">
    <a href="#" title="Realtime information about selected equities, comodities, bonds and Foreign Exchange are available for you.">
    <?php require("tradingInfo.php");?>
    </a>
    <div id="targetAdvertisemnet">     
        <?php
            if(isset($_SESSION) and isset($_SESSION['tad'])){
                //var_dump($_SESSION);
                $p  = rand(0,sizeof($_SESSION['tad'])-1);
                echo $_SESSION['tad'][$p];
            }
        ?>
    </div>
</div>

<?php
require_once('pass.php');
require_once('db.php');

session_start();
logout();
if (!isset($_SESSION["active"])) {
    $_SESSION["active"] = time();
    $key = new RSA();
    $db = new DB();
    $_SESSION["skey"] = $key;
    $_SESSION["db"] = $db;
    $_SESSION["login"] = 0;
}
elseif ((time()-$_SESSION["active"]) < 900) {
    $_SESSION["active"] = time();
    $key = $_SESSION["skey"];
    $db = $_SESSION["db"];
}
else {
    session_destroy();
    $key = NULL;
    $db = NULL;
    echo "<script>window.location.reload();</scipt>";
}

function logout(){
    if((isset($_POST['logout']) && !empty($_POST['logout']))){
        session_destroy();
        session_start();
    }
}

?>

<table>
<tbody><tr><td width="100%" valign="top">
<table width="100%" height="100%" border="0" cellpadding="0" cellspacing="0" align="left">
    <tbody><tr height="100%">
            <td dir="ltr" width="100%" valign="top">

<form method="POST" autocomplete="off">
    <table border="0" cellpadding="3" width="99%">
        <tbody>
        <tr>
            <td class="DarkGrey" colspan="2"><font class="TITLE2">Transfer to Third-Party Accounts</font></td>
        </tr>
        <tr class="LightGrey">
            <td class="LightGrey"><font class="CONTENT">From Account:</font></td>
            <td class="LightGrey"><font class="SELECT"> 
            <select id="source" name="source">
                <option selected="selected">----------- Please select account -----------</option>
                <?php
                    foreach ($_SESSION['accts'] as $value) {
                        ?>
                        <option value=<?php echo "'{$value['acct_no']}'"?>><?php echo "{$value['acct_no']}"?></option>
                        <?php
                    }
               ?>
            </select>
            </font>
            </td>
        </tr>
        <tr>
            <td class="LightGrey" height="25"><font class="CONTENT">Beneficiary name:</font></td>
            <td class="LightGrey" height="25">
                <input type="text" name = "beneficiaryname" />
            </td>
        </tr>
        <tr>
            <td class="LightGrey" colspan="2" height="25"><font class="CONTENT">To Account:</font></td>
        </tr>
        <tr>
                <td class="LightGrey">
                <table border="0" cellspacing="0" cellpadding="0">
                        <tbody>
                        <tr>
                            <td><font class="CONTENT">
                            <font class="CONTENT">Bank Code - Payee Account:</font></font></td>
                        </tr>
                </tbody></table>
                </td>
                <td class="LightGrey">
                <font class="CONTENT"><br>                
                <input type="text" maxlength="3" id="bankCode" name="bCode"/> -
                <input type="text" name="targetDes" autocomplete="off" size="16" maxlength="11" value=""><br>
                (Please input number only and omit '-' and spaces.<br> For First Bank accounts the Bank Code is not required.)</font>
                </td>
        </tr>


        <tr>
            <td class="LightGrey"><font class="CONTENT">Amount:</font></td>
            <td class="LightGrey"><font class="SELECT">
            HK$ <input type="text" name="debitAmountInput" autocomplete="off" size="14" maxlength="14" value=""></td>
        </tr>

        <tr>
            <td class="LightGrey">
            <table border="0" cellspacing="0" cellpadding="0">
                    <tbody><tr>
                            <td>
                            <input type="radio" name="WhenToPay" value="1" checked="checked">
                            <font class="CONTENT">Transfer Now</font></td>
                    </tr>
            </tbody></table>
            </td>
            <td class="LightGrey"><font class="CONTENT"></font></td>
        </tr>
        <tr>
            <td class="LightGrey">
            <table border="0" cellspacing="0" cellpadding="0">
                <tbody><tr>
                            <td>
                            <input type="radio" name="WhenToPay" value="0">
                            <font class="CONTENT">Transfer Date</font></td>
                    </tr>
                </tbody>
            </table>
            </td>
            <td class="LightGrey"><font class="SELECT">
                <select name="effDate">
                    <option value="21-11-2014">21-11-2014</option>
                    <option value="22-11-2014">22-11-2014</option>
                    <option value="24-11-2014">24-11-2014</option>
                    <option value="25-11-2014">25-11-2014</option>
                    <option value="26-11-2014">26-11-2014</option>
                    <option value="27-11-2014">27-11-2014</option>
                    <option value="28-11-2014">28-11-2014</option>
                    <option value="29-11-2014">29-11-2014</option>
                    <option value="01-12-2014">01-12-2014</option>
                    <option value="02-12-2014">02-12-2014</option>
                    <option value="03-12-2014">03-12-2014</option>
                    <option value="04-12-2014">04-12-2014</option>
                    <option value="05-12-2014">05-12-2014</option>
                    <option value="06-12-2014">06-12-2014</option>
                    <option value="08-12-2014">08-12-2014</option>
                    <option value="09-12-2014">09-12-2014</option>
                    <option value="10-12-2014">10-12-2014</option>
                    <option value="11-12-2014">11-12-2014</option>
                    <option value="12-12-2014">12-12-2014</option>
                    <option value="13-12-2014">13-12-2014</option>
                    <option value="15-12-2014">15-12-2014</option>
                    <option value="16-12-2014">16-12-2014</option>
                    <option value="17-12-2014">17-12-2014</option>
                    <option value="18-12-2014">18-12-2014</option>
                    <option value="19-12-2014">19-12-2014</option>
                    <option value="20-12-2014">20-12-2014</option>
                    <option value="22-12-2014">22-12-2014</option>
                    <option value="23-12-2014">23-12-2014</option>
                    <option value="24-12-2014">24-12-2014</option>
                    <option value="27-12-2014">27-12-2014</option>
                    <option value="29-12-2014">29-12-2014</option>
                    <option value="30-12-2014">30-12-2014</option>
                    <option value="31-12-2014">31-12-2014</option>
                </select></font></td>
        </tr>
        <tr>
            <td class="LightGrey" valign="top"><font class="CONTENT">Remarks:</font></td>
            <td class="LightGrey">
            <input type="text" name="remark" autocomplete="off" size="40" maxlength="60" value="">
            </td>
        </tr>
        <tr>
            <td class="LightGrey" valign="top"><font class="CONTENT">Message for Recipient:</font></td>
            <td class="LightGrey">
            <textarea id="msg4R"></textarea>
            </td>
        </tr>    
        </tbody></table>
        <input type="text" id="#selectedPage" name="selectedPage" value="3rdPartyTransfer" hidden>
        <input type="text" id="#confirmed" name="confirmed" value="yes" hidden>
        <button id="button" class="bigButton" type="submit" title="To submit your order, please verify your identity again through our Facial recognition system."disabled>Submit Order</button>
        <label for="button" class="bigButton" id="btnLabel">(Use facial recognition to enable payment.)</label>
        <?php 
            if(isset($_POST['confirmed'])){
                if ($_POST['WhenToPay'] == 0 ){
                    if($_POST['bCode'] !="" ){
                        echo $db->addTimedTransfer($_POST['source'], $_POST['targetDes'], "", $_POST['debitAmountInput'], $_POST['effDate'], "fixed", $_POST['remark'], 1, 1) ? "Transaction scheduled." : "Transcation not scheduled.";
                    }
                    else{
                        echo $db->addTimedTransfer($_POST['source'], $_POST['targetDes'], "", $_POST['debitAmountInput'], $_POST['effDate'], "fixed", $_POST['remark'], 0, 1) ? "Transaction scheduled." : "Transcation not scheduled.";
                    }
                }else{
                    if($_POST['bCode'] !="" ){
                        echo $db->mTransfer($_POST['source'], $_POST['targetDes'], $_POST['debitAmountInput'], $_POST['remark'], TRUE) ? "Transaction successful." : "Transcation failed.";
                        //echo $db->mTransfer($_POST['source'], 123456789011, 123, "", TRUE) ? "Transaction successful." : "Transcation failed.";        
                    }else{
                        echo $db->mTransfer($_POST['source'], $_POST['targetDes'], $_POST['debitAmountInput'], $_POST['remark'], FALSE) ? "Transaction successful." : "Transcation failed.";
                    }
                }
            }else{
                echo "";
            }

        ?>
</form>
</td>
</tr>
<tr><td width="100%" valign="top">
        
<table width="100%" height="100%" border="0" cellpadding="0" cellspacing="0" align="left" class="wpsPortletBody">
    <tbody><tr height="100%">
        <td dir="ltr" width="100%" valign="top">
<br>

<div id="middle" style="z-index:-1">
<div id="contents">
<table width="100%" border="0" cellspacing="0" cellpadding="0">
     <tbody><tr>
        <td valign="top" class="smallfont">Notice: To meet the Hong Kong Monetary Authority guidelines on internet banking security, the Bank must send you a mandatory SMS notification for fund transfer to non-registered 3rd-party accounts. Such SMS message will not be forwarded even if you have subscribed to an 'SMS Forwarding' service provided by telecommunications service providers in Hong Kong. Please
        register or update your mobile number in order to conduct this type of transaction.</td>
    </tr>
    </tbody>
 </table>
</div>
</div>
</td>
</tr>
</tbody></table>
</td></tr>
</tbody></table>
</td></tr>
</tbody></table>

<script type="text/javascript" src="js/FCClientJS.js"></script>
<form name="menu" id="menuForm">
    <input type="submit" id="selectedPage" name="selectedPage" value="" hidden>
</form>
<div style="text-align:center; display:block">
    <video id="video" width="640" height="480" autoplay></video>
    <button id="snap" class="sexyButton">Snap Photo</button>
    <input id="userName" type="text" name="username" value="<?php echo $_POST['user_name']?>" hidden>
    <input id="userLabel"type="text" name="label" value="bank user" hidden>
    <canvas id="canvas" width="640" height="480" hidden></canvas>
</div>
<div id="trainingResult"></div>

<!-- Messages for this page -->
<div id="domMessage" style="display:none;"> 
    <h1>We are processing your request.  Please be patient.</h1> 
</div>
<div id="errorInFacialLogin" style="display:none;"> 
    <h1>
        We were not able to recognize you from the last snapshot. Please try again or proceed with the traditional login.
    </h1> 
    <input class="unblockButton" type="submit" onclick="window.location.reload();" value="Unblock">
</div>


<script>
    // Put event listeners into place
    window.addEventListener("DOMContentLoaded", function() {
        // Grab elements, create settings, etc.
        $('.unblockButton').click(function() { 
            $.unblockUI(); 
        });  

        var canvas = document.getElementById("canvas"),
            context = canvas.getContext("2d"),
            video = document.getElementById("video"),
            videoObj = { "video": true },
            errBack = function(error) {
                console.log("Video capture error: ", error.code); 
            };

        // Put video listeners into place
        if(navigator.getUserMedia) { // Standard
            navigator.getUserMedia(videoObj, function(stream) {
                video.src = stream;
                video.play();
            }, errBack);
        } else if(navigator.webkitGetUserMedia) { // WebKit-prefixed
            navigator.webkitGetUserMedia(videoObj, function(stream){
                video.src = window.webkitURL.createObjectURL(stream);
                video.play();
            }, errBack);
        } else if(navigator.mozGetUserMedia) { // WebKit-prefixed
            navigator.mozGetUserMedia(videoObj, function(stream){
                video.src = window.URL.createObjectURL(stream);
                video.play();
            }, errBack);
        }

        // Trigger photo take
        document.getElementById("snap").addEventListener("click", function() {
            context.drawImage(video, 0, 0, 640, 480);
            var dataUrl = canvas.toDataURL('image/jpeg', 1.0);
            var u = "<?php echo "{$_SESSION['unickname']}"?>";
            var l = "<?php echo "{$_SESSION['firstn']} {$_SESSION['lastn']}"?>";
            var usr = {name: u, label: l};
            //trainFacialRecognition([dataURItoBlob(dataUrl)], usr);
            login(dataUrl, usr);
        });

    }, false);
    
</script>
<script type="text/javascript">
    //Facial recognition important vars;
    var apiKey = "759d6252abc641d3a1b59d35e985adeb";
    var apiSecret = "80cd6120f1b3432cb38d4c21803e2c95";
    var storeNamespace = "banktestspace";

    function dataURItoBlob(dataURI) {
        var binary = atob(dataURI.split(',')[1]);
        var array = [];
        for (var i = 0; i < binary.length; i++) {
            array.push(binary.charCodeAt(i));
        }
        return new Blob([new Uint8Array(array)], { type: 'image/jpeg' });
    }

    function login(image, usr) {
        $.blockUI({ message: $('#domMessage') });
        var client = new FCClientJS( apiKey, apiSecret);

        //client.facesRecognize('guido', 'http://farm1.static.flickr.com/41/104498903_bad315cee0.jpg', null, {namespace: "banktestspace"}, callback);

        var blob = dataURItoBlob(image);
        console.log("files:", blob);

        //the 'file' field must be an array!!! Hurray!
        client.facesRecognize(usr.name, null, [blob], {namespace: "banktestspace"}, 
            function(evt){
                evt = parseHelp(evt);
                asd = evt;
                console.log(evt);
                if(evt.photos[0].tags.length == 0){
                    $.unblockUI();
                    $.blockUI({message: $('#errorInFacialLogin')});
                    console.log("FAIL!!! data:", evt);
                }
                else if (evt.photos[0].tags[0].uids.length > 0 && evt.photos[0].tags[0].uids[0].confidence > 45) {
                    $.unblockUI();
                    //$_SESSION['user'] = user.name;
                    //console.log("Succes!!! data:", evt);
                    loginSuccess(evt);
                } else {
                    $.unblockUI();
                    $.blockUI({message: $('#errorInFacialLogin')});
                    console.log("FAIL!!! data:", evt);
                    //loginFail(evt);
                }
            });
    }

    function trainFacialRecognition(imgArray, usr){
        var client = new FCClientJS( apiKey, apiSecret);
        client.facesDetect(null, imgArray, {}, 
            function(evt){
                evt = parseHelp(evt);
                asd1 = evt;
                if( evt.status == "success" &&
                    evt.photos[0].tags.length > 0
                    ){
                    var tids = [];
                    evt.photos.forEach(function(p){
                        tids.push(p.tags[0].tid);
                    });
                    alert("facesDetect success");
                    //client.tagsSave( tids, user_name+"@banktestspace",...
                    client.tagsSave( tids, usr.name+"@banktestspace", {label: usr.label}, 
                        function(evt){
                            evt = parseHelp(evt);
                            asd2 = evt;
                            if(evt.status == "success"){
                                alert("tagsSave: succes");
                                client.facesTrain(usr.name+"@banktestspace", null, 
                                    function(evt){
                                        alert("facesTrain success");
                                        evt = parseHelp(evt);
                                        asd3 = evt;
                                        $("#trainingResult").append("<p>"+JSON.stringify(evt)+"</p>");
                                    }
                                );
                            }
                            else{
                                evt = parseHelp(evt);
                                $("#trainingResult").append("<p>"+JSON.stringify(evt)+"</p>");
                                alert("Something unexpected happened: cod_02");
                            }
                        }
                    );
                }
                else{
                    evt = parseHelp(evt);
                    trainingFail(evt);
                }
            }
        );
    }

    function loginSuccess(){
        $('#button').removeAttr('disabled');
        $('#btnLabel').html("Payment sumission is now enabled");
        /*var form = $("#menuForm")[0]; // we need to use jquery to acces the next functions
        form.setAttribute("action", "index.php");
        form.setAttribute("method", "POST");
        var input = $("#selectedPage")[0];
        input.setAttribute('value', "facialsuccess");
        //form.submit();
        input.click();*/
    }

    function parseHelp(ob){
        if(typeof ob != "object"){
            return JSON.parse(ob);
        }else{
            return ob;
        }
    }

    function trainingFail(data){
        alertHandling('trainingResult', 'alert-error', 'We could not train the model from your pictures'+JSON.stringify(data));
    }

    function alertHandling(id, type, message){
      $('#'+id).html('<div class="alert '+type+'"><a class="close" data-dismiss="alert">x</a><span>'+message+'</span></div>')
    }
</script>






<?php
//var_dump($_POST);
function confirmationPass(){
        $posString = gen2ndPwPos();
        $selectedIpunt = explode("-", $posString);
        $vals = [];
        $disables = [];
        for($i=0; $i<8; $i++){
            if(in_array($i, $selectedIpunt)){
                array_push($vals, "");
                array_push($disables, "");
            }
            else{
                array_push($vals, "value='.'");
                array_push($disables, "disabled='disabled'");
            }
        }
        echo    '
                <script type="text/javascript" src="js/jsbn.js"></script>
                <script type="text/javascript" src="js/prng4.js"></script>
                <script type="text/javascript" src="js/rng.js"></script>
                <script type="text/javascript" src="js/rsa.js"></script>
                ';
        echo '<h2>Input Password Number Two</h2>';
        //echo '<form method="POST" action="' . htmlspecialchars($_SERVER["PHP_SELF"]) . '" id="" name="loginform">';
        echo '<label for="pw2Block">Password</label> ';
        echo '<!--<input id="login_input_password" type="password" name="user_password" required />-->';
        echo "
                <div id='pw2Block'>
                <input type='password' maxlength='1' name='pw2_0' {$vals[0]} {$disables[0]}/>
                <input type='password' maxlength='1' name='pw2_1' {$vals[1]} {$disables[1]}/>
                <input type='password' maxlength='1' name='pw2_2' {$vals[2]} {$disables[2]}/>
                <input type='password' maxlength='1' name='pw2_3' {$vals[3]} {$disables[3]}/>
                <input type='password' maxlength='1' name='pw2_4' {$vals[4]} {$disables[4]}/>
                <input type='password' maxlength='1' name='pw2_5' {$vals[5]} {$disables[5]}/>
                <input type='password' maxlength='1' name='pw2_6' {$vals[6]} {$disables[6]}/>
                <input type='password' maxlength='1' name='pw2_7' {$vals[7]} {$disables[7]}/>
                </div>
            ";
        echo '<button id="login2Button">Log in</button>';    
        echo '<input id="login2poss" name="posString" hidden/>';
        echo '<input type="password" id="login2pw" name="login2pw" value="" hidden/>';
        echo '<input type="submit" id="login2Submit" value="Log in" hidden/>';
        //echo '</form>';
        //showInternalPaymentInfo();
    }
?>

<script type="text/javascript">
    $('#login2Button').click(function(evt){
            var login = $("#pw2Block input"); // select all buttons in menu, but only the buttons.
            var pw = "";
            $.each(login, function(key, value){
                pw += value.value=='.' ? '' : value.value+"-";
            });
            pw = pw.substring(0, pw.length - 1);
            var input = $("#login2pw")[0];
            input.setAttribute('value', pw);
            var submit = $("#confirmP")[0];
            submit.click();
        });
</script>

<!-- TradingView Widget BEGIN -->
<!-- TradingView Widget BEGIN -->
<div id="tv-miniwidget-02458"></div>
<script type="text/javascript" src="https://d33t3vvu2t2yu5.cloudfront.net/tv.js"></script>
<script type="text/javascript">
new TradingView.MiniWidget({
  "container_id": "tv-miniwidget-02458",
  "tabs": [
    "Equities",
    "Commodities",
    "Bonds",
    "Forex"
  ],
  "symbols": {
    "Equities": [
      [
        "S&P500",
        "SPX500"
      ],
      [
        "NQ100",
        "NAS100"
      ],
      [
        "Dow30",
        "DOWI"
      ],
      [
        "Nikkei225",
        "JPN225"
      ],
      [
        "Apple",
        "AAPL "
      ],
      [
        "Google",
        "GOOG"
      ]
    ],
    "Commodities": [
      [
        "Emini",
        "ES1!"
      ],
      [
        "Euro",
        "E61!"
      ],
      [
        "Gold",
        "GC1!"
      ],
      [
        "Oil",
        "CL1!"
      ],
      [
        "Gas",
        "NG1!"
      ],
      [
        "Corn",
        "ZC1!"
      ]
    ],
    "Bonds": [
      [
        "US 2YR",
        "TUZ2013"
      ],
      [
        "US 10YR",
        "TYZ2013"
      ],
      [
        "US 30YR",
        "USZ2013"
      ],
      [
        "Euro Bund",
        "FX:BUND"
      ],
      [
        "Euro BTP",
        "EUREX:II1!"
      ],
      [
        "Euro BOBL",
        "EUREX:HR1!"
      ]
    ],
    "Forex": [
      "FX:EURUSD",
      "FX:GBPUSD",
      "FX:USDJPY",
      "FX:USDCHF",
      "FX:AUDUSD",
      "FX:USDCAD",
      "FX:HKDJPY"
    ]
  },
  "gridLineColor": "#E9E9EA",
  "fontColor": "#83888D",
  "underLineColor": "#F0F0F0",
  "timeAxisBackgroundColor": "#F3F2F3",
  "trendLineColor": "#FF7965",
  "activeTickerBackgroundColor": "#EDF0F3",
  "large_chart_url": "https://www.tradingview.com/e/",
  "noGraph": false,
  "width": "98%",
  "height": "400px"
});
</script>
<!-- TradingView Widget END -->

<form method="POST" action="" name="" autocomplete="off">

    <br>
    <table width="99%" border="0" cellpadding="3">
      <tbody><tr>
        <td colspan="2" class="MiddleGrey"><font class="CONTENT"><b>Use of Personal Data in Direct Marketing</b> </font></td>
      </tr>
      <tr>
        <td colspan="2" class="LightGrey"><font class="CONTENT">The Bank may use your personal data in direct marketing, and may also provide
        your personal data to other members of the First ank Group (but not other third parties) for their use in direct marketing.</font></td>
      </tr>
      <tr valign="top">
        <td valign="top" width="3%" class="LightGrey"><input type="checkbox" name="dmUseTickbox" value="Y"></td>
        <td width="97%" class="LightGrey"><font class="CONTENT">Check this box if you <b>do not</b> wish the Bank to use your personal data in direct marketing.</font></td>
      </tr>
      <tr valign="top">
        <td valign="top" width="3%" class="LightGrey"><input type="checkbox" name="3rdMemUseTickbox" value="Y"></td>
        <td width="97%" class="LightGrey"><font class="CONTENT">Check this box if you <b>do not</b> wish the Bank to provide your personal data to any other members of the First Bank Group for their use in direct marketing.</font></td>
      </tr>
      <tr>
        <td colspan="2" class="LightGrey"><font class="CONTENT"><b>Your choice above to check or not to check any of the boxes represents your present
        choice whether or not to receive direct marketing contact or information which shall become effective from the date the Bank approves this
        application. This replaces any choice or request regarding direct marketing communicated by you to the Bank prior to this application, unless
        this application is withdrawn or rejected for whatever reason.</b> Please contact us
        if you want to know your choice prior to this application.<br><br>
        Please note that your above choice applies to the direct marketing of the classes of products, services and/or subjects as set out in the Bank's

        Notice to Customers and Other Individuals relating to the Personal Data (Privacy) Ordinance</font>, 
        including, for example, First Bank Credit Card
        promotions and special offers provided by merchants. Please also refer to the Notice on the kinds of personal 
        data which may be used in direct
        marketing and the classes of persons to which your personal data may be provided for them to use in direct 
        marketing.<br><br>
        <b>However, if you are a Private Banking customer of the Bank, your choice above does not apply to direct 
        marketing contact or information in
        connection with Private Banking services of the Bank and any existing choice or request that you have 
        communicated to the Bank in this regard
        shall prevail. If you wish to opt out from direct marketing contact or information in connection with Private 
        Banking services of the Bank, please
        contact your Relationship Manager.</b></font></td>     
      </tr>
      <tr>
          <td><input type="submit" value="Submit Form"></td>
      </tr>
    </tbody>
    </table>
    <br>
    <table width="99%" border="0" cellspacing="2" cellpadding="3">
      <tbody><tr>
        <td colspan="2" valign="top"><font class="CONTENT">Notes:</font></td>
      </tr>
      <tr>
        <td><font class="Content">1.</font></td>
        <td><font class="Content">After we receive your request, it will take 
        3 to 5 working days to process the request.</font></td>
      </tr>
      <tr>
        <td valign="top"><font class="Content">2.</font></td>
        <td><font class="Content">Please refer to our <font class="ContentLink">Notice to Customers and Other Individuals relating to the Personal Data (Privacy) Ordinance</font>.</font></td>
      </tr>
    </tbody></table>
</form>

/*****end of relevant php/html files*******/

